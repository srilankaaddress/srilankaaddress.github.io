<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1364.htm" />
    <title>双向带头循环链表（详解） - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">双向带头循环链表（详解）</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> 双向链表的定义</h2> <p><strong>双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。<br /> 下图为双向链表的带头结构图。</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/0cf634052a29984c6f76a91c862d44dc.jpg" alt="双向带头循环链表（详解）"><br /><strong>下图为双向链表不带头结构图</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/ec226088753b3a4bf9fae5bd89a1351c.jpg" alt="双向带头循环链表（详解）"></p> <p>这里我们在定义双向链表的时候，一个结点里面的next存储的下一个结点的地址，prev存储的是上一个结点的地址，这里我们就会将其链接起来。</p> <h2> 头文件</h2> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span>  <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string"><stdio.h></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string"><string.h></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string"></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string"><stdlib.h></span></span>   <span class="token keyword">typedef</span> <span class="token keyword">int</span>  LTDateType<span class="token punctuation">;</span>  <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{<!-- --></span> 	LTDateType data<span class="token punctuation">;</span> 	<span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> next<span class="token punctuation">;</span> 	<span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> prev<span class="token punctuation">;</span> <span class="token punctuation">}</span>LTNode<span class="token punctuation">;</span>   <span class="token comment">//初始化</span> LTNode<span class="token operator">*</span> <span class="token function">ListInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//申请新的结点</span> LTNode<span class="token operator">*</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//尾插</span> <span class="token keyword">void</span> <span class="token function">ListPushBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//尾删</span> <span class="token keyword">void</span> <span class="token function">ListPopBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//头插</span> <span class="token keyword">void</span> <span class="token function">ListPushFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//头删</span> <span class="token keyword">void</span> <span class="token function">ListPopFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//打印</span> <span class="token keyword">void</span> <span class="token function">ListPrint</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//查找</span> LTNode<span class="token operator">*</span> <span class="token function">ListFind</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//在pos位置之前进行插入</span> <span class="token keyword">void</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除pos位置的结点</span> <span class="token keyword">void</span> <span class="token function">ListErase</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> <a id="_49" rel="nofollow">接口的实现</h2> <h3> 1、新节点的申请以及初始化链表</h3> <pre><code class="prism language-c"><span class="token comment">//申请新的结点</span> LTNode<span class="token operator">*</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>LTNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LTNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>data <span class="token operator">=</span> x<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> newnode<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">//初始化</span> LTNode<span class="token operator">*</span> <span class="token function">ListInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//哨兵位的头节点</span> 	LTNode<span class="token operator">*</span> phead <span class="token operator">=</span> <span class="token punctuation">(</span>LTNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LTNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	phead<span class="token operator">-></span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	phead<span class="token operator">-></span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	<span class="token keyword">return</span> phead<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> 2、链表的头插尾插</h3> <pre><code class="prism language-c"><span class="token comment">//头插</span> <span class="token keyword">void</span> <span class="token function">ListPushFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next <span class="token operator">=</span> phead<span class="token operator">-></span>next<span class="token punctuation">;</span> 	phead<span class="token operator">-></span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>next <span class="token operator">=</span> next<span class="token punctuation">;</span> 	next<span class="token operator">-></span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  	<span class="token comment">//调用ListInsert也可以实现头插</span> 	<span class="token comment">//ListInsert(phead->next, x);</span>  <span class="token punctuation">}</span> <span class="token comment">//尾插</span> <span class="token keyword">void</span> <span class="token function">ListPushBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> tail <span class="token operator">=</span> phead<span class="token operator">-></span>prev<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	tail<span class="token operator">-></span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>prev <span class="token operator">=</span> tail<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	phead<span class="token operator">-></span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  	<span class="token comment">//调用ListInsert也可以实现尾插</span> 	<span class="token comment">//ListInsert(phead, x);</span> <span class="token punctuation">}</span> </code></pre> <h3> 3、链表的头删尾删</h3> <pre><code class="prism language-c"><span class="token comment">//头删</span> <span class="token keyword">void</span> <span class="token function">ListPopFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token operator">-></span>next <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next <span class="token operator">=</span> phead<span class="token operator">-></span>next<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next2 <span class="token operator">=</span> next<span class="token operator">-></span>next<span class="token punctuation">;</span> 	phead<span class="token operator">-></span>next <span class="token operator">=</span> next2<span class="token punctuation">;</span> 	next2<span class="token operator">-></span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	<span class="token function">free</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//尾删</span> <span class="token keyword">void</span> <span class="token function">ListPopBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token operator">-></span>next <span class="token operator">!=</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">//找到尾</span> 	LTNode<span class="token operator">*</span> tail <span class="token operator">=</span> phead<span class="token operator">-></span>prev<span class="token punctuation">;</span> 	phead<span class="token operator">-></span>prev <span class="token operator">=</span> tail<span class="token operator">-></span>prev<span class="token punctuation">;</span> 	tail<span class="token operator">-></span>prev<span class="token operator">-></span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span>  	<span class="token function">free</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h3> 3、链表的查找</h3> <pre><code class="prism language-c"><span class="token comment">//查找</span> LTNode<span class="token operator">*</span> <span class="token function">ListFind</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> cur <span class="token operator">=</span> phead<span class="token operator">-></span>next<span class="token punctuation">;</span> 	<span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> phead<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token operator">-></span>data <span class="token operator">==</span> x<span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">return</span> cur<span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		cur <span class="token operator">=</span> cur<span class="token operator">-></span>next<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> 4、在pos位置之前进行插入以及删除pos位置的结点</h3> <pre><code class="prism language-c"><span class="token comment">//在pos位置之前进行插入</span> <span class="token keyword">void</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posprev <span class="token operator">=</span> pos<span class="token operator">-></span>prev<span class="token punctuation">;</span> 	posprev<span class="token operator">-></span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>prev <span class="token operator">=</span> posprev<span class="token punctuation">;</span> 	newnode<span class="token operator">-></span>next <span class="token operator">=</span> pos<span class="token punctuation">;</span> 	pos<span class="token operator">-></span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token comment">//删除pos位置的结点</span> <span class="token keyword">void</span> <span class="token function">ListErase</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posnext <span class="token operator">=</span> pos<span class="token operator">-></span>next<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posprev <span class="token operator">=</span> pos<span class="token operator">-></span>prev<span class="token punctuation">;</span> 	posnext<span class="token operator">-></span>prev <span class="token operator">=</span> posprev<span class="token punctuation">;</span> 	posprev<span class="token operator">-></span>next <span class="token operator">=</span> posnext<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> 5、链表的打印</h3> <pre><code class="prism language-c"><span class="token comment">//打印</span> <span class="token keyword">void</span> <span class="token function">ListPrint</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> cur <span class="token operator">=</span> phead<span class="token operator">-></span>next<span class="token punctuation">;</span> 	<span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> phead<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> cur<span class="token operator">-></span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 		cur <span class="token operator">=</span> cur<span class="token operator">-></span>next<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><em><strong>但是相对于双向带头链表来说，有下面的优缺点：</strong></em><br /><strong>优点</strong><br /><strong>1、在任意位置插入删除效率高。O(1)</strong><br /><strong>2、按需申请空间</strong><br /><strong>缺点</strong><br /><strong>1、不支持随机访问。(下标访问)意味着一些快排，二分查找在这种结构上不适用</strong></p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1363.htm">ASP.NET Core使用AutoMapper组件_实用技巧</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1365.htm">Java基础|Java8接口新特性</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6159.htm" title="蓝莓酒的泡制方法,酿造你的独特风味是什么(蓝莓酒的泡制方法,酿造你的独特风味)">蓝莓酒的泡制方法,酿造你的独特风味是什么(蓝莓酒的泡制方法,酿造你的独特风味)</a></li>
                        <li class="py-2"><a href="/html/category/article-6009.htm" title="水生动物医学兽医证（水生动物兽医证报考条件）">水生动物医学兽医证（水生动物兽医证报考条件）</a></li>
                        <li class="py-2"><a href="/html/category/article-7223.htm" title="一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词">一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词</a></li>
                        <li class="py-2"><a href="/html/category/article-7315.htm" title="预制菜包装袋可以直接加热嘛">预制菜包装袋可以直接加热嘛</a></li>
                        <li class="py-2"><a href="/html/category/article-5938.htm" title="河北农民频道（河北农民频道官网）">河北农民频道（河北农民频道官网）</a></li>
                        <li class="py-2"><a href="/html/category/article-7452.htm" title="成都兽用疫苗公司排名（成都兽药市场详细地址）">成都兽用疫苗公司排名（成都兽药市场详细地址）</a></li>
                        <li class="py-2"><a href="/html/category/article-6070.htm" title="小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）">小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）</a></li>
                        <li class="py-2"><a href="/html/category/article-7222.htm" title="长得最快的植物是什么 （走进十大快速生长树木!）">长得最快的植物是什么 （走进十大快速生长树木!）</a></li>
                        <li class="py-2"><a href="/html/category/article-6993.htm" title="南京宠物寄养（南京宠物寄养家庭）">南京宠物寄养（南京宠物寄养家庭）</a></li>
                        <li class="py-2"><a href="/html/category/article-6579.htm" title="学美容要学多久才能出师名校广州一路时尚好（学美容美发有什么要求吗全选广州一路时尚好）">学美容要学多久才能出师名校广州一路时尚好（学美容美发有什么要求吗全选广州一路时尚好）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>