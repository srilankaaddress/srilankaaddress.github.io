<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1420.htm" />
    <title>【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<h3 id="一前言">一、前言</h3> <blockquote> <p>本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例：</p> <p>https://juejin.cn/post/7091132240574283813</p> <p>CompletableFuture已经提供了串行、并行等常用异步编排的方案，但在细节上还是有许多不足，比如回调方面，编排复杂顺序方面，就捉襟见肘了。</p> <p> 之前我有关注过Gitee上star量还不错的一款开源工具AsyncTool：</p> <p>https://gitee.com/jd-platform-opensource/asyncTool</p> <p>是由京东零售的高级工程师编写的，提供了非常丰富的异步编排功能，并且经过了京东内部的测试，是对CompletableFuture的封装和补足，试用了一下挺不错。</p> </blockquote> <p></p> <h3 id="二用法">二、用法</h3> <h4 id="1引入">1、引入</h4> <blockquote> <p>1）、不推荐：maven引入，这个比较坑，客观原因经常会导致依赖下载不下来，不推荐使用；</p> <p>2）、推荐：直接下载源码，因为代码量很少，就几个核心类和测试类。</p> </blockquote> <p>如下图所示，把下载的源码拷贝进来即可，核心代码放到java目录里面，测试代码放到test目录里面。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ca3e17fc58e713e414dc9482b2482163.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2编写worker">2、编写worker</h4> <blockquote> <p>1）、worker是AsyncTool中的一个思想，专门来处理任务的，比如查询、rpc调用等耗时操作，一个任务就是一个worker；</p> <p>2）、构建worker十分简单，只需要实现IWorker和ICallback接口即可；</p> <p>3）、这里，我们承接上一篇文章的案例，分别创建查询二十四节气和查询星座的worker；</p> <p>4）、其中begin方法是构建开始时会执行，result方法是获取到结果后会执行，action方法就是处理具体任务的地方，一般业务就在这里编写，defaultValue方法提供超时异常时返回的默认值。</p> </blockquote> <p>1）、二十四节气worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * <p>  * 二十四节气worker  * </p>  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class TwentyFourWorker implements IWorker<String, String>, ICallback<String, String> {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/jieqi/query";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult<String> workResult) {       if (success) {          System.out.println("callback twentyFourWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback twentyFourWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询二十四节气     */    @Override    public String action(String object, Map<String, WorkerWrapper> allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[二十四节气]>>>> 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "twentyFourWorker";    } }</code></pre> <p></p> <p>2）、星座worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * <p>  * 星座worker  * </p>  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class ConstellationWorker implements IWorker<String, String>, ICallback<String, String> {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/astro/all";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult<String> workResult) {       if (success) {          System.out.println("callback constellationWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback constellationWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询星座     */    @Override    public String action(String object, Map<String, WorkerWrapper> allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟异常       //    int i = 1/0;        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[星座]>>>> 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "constellationWorker";    } }</code></pre> <p></p> <h4 id="3异步编排">3、异步编排</h4> <blockquote> <p>1）、新建一个AsyncToolService，在里面进行worker的声明、构建、编排；</p> <p>2）、Async.beginWork就是执行异步任务，参数分别为超时时间和worker，其中超时时间可以自己设短一点看效果；</p> <p>3）、最后封装结果返回即可，这里为演示案例节省时间直接用map返回。</p> </blockquote> <pre><code class="language-java">package com.example.async.service;  import com.example.async.worker.ConstellationWorker; import com.example.async.worker.TwentyFourWorker; import com.jd.platform.async.executor.Async; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Service;  import java.util.HashMap; import java.util.Map; import java.util.concurrent.ExecutionException;  /**  * <p>  * AsyncTools服务  * </p>  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 17:56  */ @Service @Slf4j public class AsyncToolService {     /**     * 异步返回结果     *     ---- 方式：AsyncTool并行处理     *     * @return 结果     */    public Map<String, Object> queryAsync() throws ExecutionException, InterruptedException {       // 声明worker       TwentyFourWorker twentyFourWorker = new TwentyFourWorker();       ConstellationWorker constellationWorker = new ConstellationWorker();        // 构建二十四节气worker       WorkerWrapper<String, String> twentyFourWrapper =  new WorkerWrapper.Builder<String, String>()             .worker(twentyFourWorker)             .callback(twentyFourWorker)             .param("0")             .build();        // 构建星座worker       WorkerWrapper<String, String> constellationWrapper =  new WorkerWrapper.Builder<String, String>()             .worker(constellationWorker)             .callback(constellationWorker)             .param("1")             .build();        // 开始工作，这里设定超时时间10s，测试时可以设短一点看效果。       Async.beginWork(10000, twentyFourWrapper, constellationWrapper);        // 打印当前线程数       log.debug("----------------- 当前线程数 ----------------");       log.debug(Async.getThreadCount());        // 打印结果       log.debug("----------------- 二十四节气 ----------------");       log.debug("结果: {}", twentyFourWrapper.getWorkResult());       log.debug("----------------- 星座 ----------------");       log.debug("结果: {}", constellationWrapper.getWorkResult());        // 返回       Map<String, Object> map = new HashMap<>();       map.put("twentyFour", twentyFourWrapper.getWorkResult());       map.put("constellation", constellationWrapper.getWorkResult());        // 关闭(spring web类应用不用关闭，否则第二次执行会报线程池异常。)       // Async.shutDown();        return map;    } }</code></pre> <p></p> <h4 id="4测试效果">4、测试效果</h4> <blockquote> <p>上一篇的案例有演示同步执行的结果，在10秒左右，而CompletableFuture的结果在5秒多点。<br /> 这里测试后发现，AsyncTool的结果也是5秒左右，和CompletableFuture差不多，但AsyncTool提供的编排更丰富。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d699a76cdd4d441a7d489324f46974b4.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>我们把其中一个星座worker的任务耗时调大，模拟一下超时的效果。可以发现，AsyncTool直接返回了我们上面defaultValue方法中设置的默认值。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9f74bcae09ac4c9cfa0d228c3fd83d37.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="三常用编排">三、常用编排</h3> <blockquote> <p>AsyncTool其实提供了很丰富的异步编排方式，包括较复杂的编排，但以我呆过的中小企业为例，几乎用不到复杂编排，最常用的的还是并行以及串行+并行。</p> </blockquote> <p>AsyncTool的QuickStart.md已经做了简洁的说明：https://gitee.com/jd-platform-opensource/asyncTool/blob/master/QuickStart.md</p> <p>1）、任务并行</p> <blockquote> <p>也就是本篇我们案例使用的编排，是我个人平时最常用的一种。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/bdfe3bb17aeb6778e94705eecd68243c.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>2）、串行+并行</p> <blockquote> <p>这种其实就是通过next()来做串行和并行的衔接，有些场景也会用到。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/633213bf5bee70aa59352623a9d82865.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>3）、依赖其他任务的结果</p> <blockquote> <p>这也是很常见的场景，B任务依赖A任务的结果来实现业务，最后返回。</p> <p>AsyncTool也提供了很方便的方式：</p> <p>1）、在service中构建worker-A时设置一个id名称；</p> <p>2）、你可以发现worker的action方法第二个入参是个map，里面就是所有的wrapper；</p> <p>3）、在worker-B的action方法中get这个id来获取wrapper从而拿到A的结果即可。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/baab5f2aea14e1f9b40e94ef9bcbd95e.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/05b9d6ae9cad9dfb7223d8c7e8473cf6.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="四避坑经验">四、避坑经验</h3> <h4 id="1勿关闭线程池">1、勿关闭线程池</h4> <blockquote> <p>AsyncTool提供了很多测试类，里面包含了所有编排方式，可以一一查看并验证，但使用过程中要注意一点，如果是spring-web项目，比如springboot，不需要手动Async.shutdown()处理，否则会执行一次后就关闭线程池了，这是不少人直接拷贝test代码疏忽的地方。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/333b6d7ea65f324bb9530383215f5c9d.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2自定义线程池">2、自定义线程池</h4> <blockquote> <p>这个问题可以在AsyncTool的issue中看到相关讨论，作者君是根据京东零售的业务来决定使用什么线程池的，他们使用的默认线程池就是newCachedThreadPool，无限制长度的线程池，且具备复用特性，按照作者君的说法，因为京东的场景多数为低耗时（10ms）高并发，瞬间冲击的场景，所以最适合这种线程池。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a2494b093490a74a86859e8f5a7412e2.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e873cb7fbba1cc357229af1bf6bc1a10.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>而根据我的经验，不同公司的业务和项目都不同，中小企业往往依靠企事业单位生存，对接第三方厂家较多，rpc接口耗时往往较长且不可控，不符合京东零售低耗时高并发的特点，直接使用Integer.MAX_VALUE的无限制核心线程数的方式不太合适。</p> <p>我建议中小企业使用自定义线程池，根据自身硬件水平和压测结果调整最终核心线程数和任务队列长度，确定合适的拒绝策略，比如直接拒绝或走主线程，这样会比较稳妥。</p> </blockquote> <p></p> <h3 id="五示例代码">五、示例代码</h3> <blockquote> <p>完整示例代码提供给大家，里面有我的极速数据API的key，每天100次免费调用，省去注册账号，先到先测，慢点就只能等明天了哦。</p> <p>链接：https://pan.baidu.com/doc/share/kJyph2LX076okHVWv38tlw-159275174957933</p> <p>提取码：yqms</p> </blockquote> <p></p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1419.htm">ONVIF开发（2）vs2013编译openssl库</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1421.htm">关于Jeecg uniapp 使用 mescroll 无法上拉加载</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7177.htm" title="预制菜第一品牌（新疆预制菜第一品牌）">预制菜第一品牌（新疆预制菜第一品牌）</a></li>
                        <li class="py-2"><a href="/html/category/article-7591.htm" title="宠物粮市场分析怎么写的（宠物粮食市场前景）">宠物粮市场分析怎么写的（宠物粮食市场前景）</a></li>
                        <li class="py-2"><a href="/html/category/article-8280.htm" title="内墙防水涂料十大品牌有哪些牌子(内墙防水涂料十大品牌有哪些好)">内墙防水涂料十大品牌有哪些牌子(内墙防水涂料十大品牌有哪些好)</a></li>
                        <li class="py-2"><a href="/html/category/article-7913.htm" title="动物防疫法适用于牛蛙吗（动物防疫法解读）">动物防疫法适用于牛蛙吗（动物防疫法解读）</a></li>
                        <li class="py-2"><a href="/html/category/article-8327.htm" title="宠物用品微商货源（宠物用品货源从哪里来）">宠物用品微商货源（宠物用品货源从哪里来）</a></li>
                        <li class="py-2"><a href="/html/category/article-7131.htm" title="c开头的口红品牌有哪些牌子(c开头的口红品牌有哪些好)">c开头的口红品牌有哪些牌子(c开头的口红品牌有哪些好)</a></li>
                        <li class="py-2"><a href="/html/category/article-7223.htm" title="一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词">一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词</a></li>
                        <li class="py-2"><a href="/html/category/article-7314.htm" title="动物疫苗的作用是什么 动物疫苗的作用是什么呢">动物疫苗的作用是什么 动物疫苗的作用是什么呢</a></li>
                        <li class="py-2"><a href="/html/category/article-7590.htm" title="茅台 上市时间(茅台上市是哪一年)">茅台 上市时间(茅台上市是哪一年)</a></li>
                        <li class="py-2"><a href="/html/category/article-8005.htm" title="动物疫苗行业现状分析论文（动物疫苗市场规模）">动物疫苗行业现状分析论文（动物疫苗市场规模）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>