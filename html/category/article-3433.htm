<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-3433.htm" />
    <title>一文看懂HBase倒序分页查询（实现分页跳转） - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">一文看懂HBase倒序分页查询（实现分页跳转）</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <div class="toc"> <h3>HBase倒序分页查询</h3> <ul> <li> <ul> <li>HBase分页方式</li> <li>Hbase倒序查询</li> <li>HBase分页思想</li> <li>HBase分页具体代码</li> <li> <ul> <li>POM文件</li> <li>java类</li> </ul> </li> </ul> </li> </ul> </div> <h2> HBase分页方式</h2> <p>HBase分页查询常见的方式有两种，一种是只能点击下一页上一页，不支持跳转到某一页，而另一种则是可以点击上一页下一页，同时也可以选择跳转到某个指定的页面。我们这篇完成的例子是第二种分页方式，可跳转到某个页面。</p> <h2> Hbase倒序查询</h2> <p>Hbase实现倒序查询非常简单，只需将扫描器设置为倒序扫描即可。</p> <pre><code class="prism language-java"><span class="token comment">// 设置倒序扫描(倒序查询的关键)</span> scan<span class="token punctuation">.</span><span class="token function">setReversed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> HBase分页思想</h2> <p>HBase分页的核心思想就是结合<code>rowkey比较过滤器(RowFilter)</code>和<code>分页过滤器 (PageFilter)</code>进行查询</p> <blockquote> <ul> <li> <p><strong>分页过滤器 (PageFilter)</strong></p> <p>使用这个过滤器可以实现对结果按行进行分页，在创建PageFilter实例的时候需要传入每页的行数。</p> </li> <li> <p><strong>RowKey比较过滤器(RowFilter)</strong></p> <p>使用这个过滤器可以实现对查询数据根据rowkey进行比较，比较的规则和比较的rowkey在创建RowFilter实例时传入。</p> </li> </ul> </blockquote> <p>首先我们需要配置PageFilter，设置我们每一页需要查询的条数</p> <pre><code class="prism language-java"><span class="token comment">// 设置查询条数</span> PageFilter pageFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageFilter</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>配置完了分页过滤器之后，我们需要创建一个RowFilter</p> <pre><code class="prism language-java"><span class="token comment">// 创建RowFilter</span> RowFilter rowFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span>CompareFilter<span class="token punctuation">.</span>CompareOp<span class="token punctuation">.</span>LESS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span>Bytes<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>在创建RowFilter我们传入了两个参数：<br /> 第一个参数是比较运算符<code>CompareFilter.CompareOp.LESS</code>表示<code>小于</code>；</p> <p>第二个参数是比较器<code>new BinaryComparator(Bytes.toBytes(startRowKey))</code>表示使用<code>Bytes.compareTo(byte []，byte [])</code>按字典序进行比较。</p> <p>所以到这里就能明白，上面创建的rowFilter代表的含义，即使用<code>Bytes.compareTo(byte []，byte [])</code>方式按照字典顺序获取数据中<code>rowkey</code>比<code>startRowKey</code>小的数据。</p> <blockquote> <p>这里为什么使用小于呢，因为我们本篇使用的是倒序查询。比较运算符和比较器需要结合实际的需求来决定，而不是固定的</p> </blockquote> <h2> HBase分页具体代码</h2> <h3> POM文件</h3> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>hbase-client<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>hbase-server<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>hbase-common<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span> </code></pre> <h3> java类</h3> <pre><code class="prism language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>xiaoming<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>hbase<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>HBaseConfiguration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>TableName<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>client<span class="token punctuation">.</span>*<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>*<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Bytes<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span>  <span class="token comment">/**  * Hbase工具类  *  * @author xiaoming  * @date 2020-05-26 19:37  **/</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HbaseUtils</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token keyword">static</span> Logger logger <span class="token operator">=</span> Logger<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>HbaseUtils<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token keyword">static</span> HbaseUtils hbaseUtils<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Configuration configuration<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection connection<span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token function">HbaseUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             configuration <span class="token operator">=</span> HBaseConfiguration<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.quorum"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1,127.0.0.2,127.0.0.3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.property.clientPort"</span><span class="token punctuation">,</span> <span class="token string">"2181"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"zookeeper.znode.parent"</span><span class="token punctuation">,</span> <span class="token string">"/hbase-unsecure"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token string">"zookeeper_timeout"</span><span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                 connection <span class="token operator">=</span> ConnectionFactory<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> HbaseUtils <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>hbaseUtils <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>HbaseUtils<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>hbaseUtils <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     hbaseUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HbaseUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     hbaseUtils<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> hbaseUtils<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 功能描述: 获取分页数据      *      * @param tableName   表名      * @param currentPage 当前页码      * @param pageSize    每页条数      * @return java.lang.String      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">private</span> ResultScanner <span class="token function">queryDataByPage</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> <span class="token keyword">int</span> currentPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 第一次查询时startRowKey为null</span>         String startRowKey <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token comment">// 从第一页开始查询每页的数据</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator"><</span> currentPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">// 根据每一次传入的rowkey, 查询出排列顺序小于该 rowkey 的 pageSize 条数据, 则最后一页(currentPage)的数据就是最后一次查询的结果</span>             results <span class="token operator">=</span> <span class="token function">queryData</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> startRowKey<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>             Iterator<span class="token generics function"><span class="token punctuation"><</span>Result<span class="token punctuation">></span></span> iterator <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token comment">// 将每一页的最后一条数据做为下一页查询的起始行(不包含该条数据)</span>                 startRowKey <span class="token operator">=</span> Bytes<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 功能描述: 查询数据      *      * @param tableName   表名      * @param startRowKey 每页起始rowkey      * @param pageSize    每页条数      * @return org.apache.hadoop.hbase.client.ResultScanner      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">public</span> ResultScanner <span class="token function">queryData</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> String startRowKey<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HTable table <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>          Scan scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置倒序扫描(倒序查询的关键)</span>         scan<span class="token punctuation">.</span><span class="token function">setReversed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// MUST_PASS_ALL 表示需要满足过滤器集合中的所有的filter</span>         FilterList filterList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterList</span><span class="token punctuation">(</span>FilterList<span class="token punctuation">.</span>Operator<span class="token punctuation">.</span>MUST_PASS_ALL<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置查询条数</span>         PageFilter pageFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageFilter</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>pageFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 如果查询到了 startRowKey, 则过滤比 startRowKey 大的值</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             RowFilter rowFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span>CompareFilter<span class="token punctuation">.</span>CompareOp<span class="token punctuation">.</span>LESS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span>Bytes<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>rowFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         scan<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>filterList<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             table <span class="token operator">=</span> <span class="token punctuation">(</span>HTable<span class="token punctuation">)</span> connection<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span>TableName<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             results <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getScanner</span><span class="token punctuation">(</span>scan<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                     table<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>分页倒序查询到这里就完成了，并且已经实现了可以跳转，但是由于采用的是<code>遍历</code>的方式，如果查看页数过大，可能会存在性能上的问题，但是如果数据量不大，或者只需查看比较前的页码数据，这个方法还是很不错的，比较hbase的速度非常的快。或者说可以采用上面说的分页的第一种方式，将每一次查询的startRowkey保存起来，只进行上一页下一页的操作。</p> <blockquote> <p>由于我自己的电脑上面没有安装HBase，所以上面的代码没有在本地测试过，如果有问题，可以评论告诉一下我，我会尽快修改并答复的。Thank you~</p> </blockquote> <p><strong>补充</strong><br /> 代码验证过了，可以运行，但是需要修改一处地方，需要在每次获取startRowKey的地方加上一个判断，代码如下：</p> <pre><code class="prism language-java">    <span class="token comment">/**      * 功能描述: 获取分页数据      *      * @param tableName   表名      * @param currentPage 当前页码      * @param pageSize    每页条数      * @return java.lang.String      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">private</span> ResultScanner <span class="token function">queryDataByPage</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> <span class="token keyword">int</span> currentPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 第一次查询时startRowKey为null</span>         String startRowKey <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token comment">// 从第一页开始查询每页的数据</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator"><</span> currentPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">// 根据每一次传入的rowkey, 查询出排列顺序小于该 rowkey 的 pageSize 条数据, 则最后一页(currentPage)的数据就是最后一次查询的结果</span>             results <span class="token operator">=</span> <span class="token function">queryData</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> startRowKey<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator"><</span> currentPage <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             	Iterator<span class="token generics function"><span class="token punctuation"><</span>Result<span class="token punctuation">></span></span> iterator <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             	<span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 	<span class="token comment">// 将每一页的最后一条数据做为下一页查询的起始行(不包含该条数据)</span>                 	startRowKey <span class="token operator">=</span> Bytes<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             	<span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-3132.htm">SpringBoot和RocketMQ的实例RocketMQTemplate</a></p>
                                                                        <p>下一个：<a href="/html/category/article-3434.htm">PHP取消引用方法详解</a></p>
                                                                    </div>

                                                                <div class="panel panel-default mt-5">
                                    <div class="panel-heading">
                                        <h3 class="m-0">推荐文章</h3>
                                    </div>
                                    <div class="panel-body">
                                        <ul class="p-0 x-0">
                                                                                        <li class="py-2"><a href="/html/category/article-1567.htm">选择排序详解（Java实现）</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1523.htm">常用注解@JsonField、@JsonFormat、@DateTimeFormat区别</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1522.htm">C ++中的虚拟基类</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1489.htm">Vue 大量数据展示卡顿解决方案（长列表优化）</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1479.htm">java中序列化如果有些字段不想进行序列化怎么办</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1462.htm">element UI-级联选择器（el-cascader）</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1439.htm">vue实现横屏滚动公告效果_vue.js</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1425.htm">vue中动态改变样式</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1392.htm">Typescript和 Javascript 区别</a></li>
                                                                                        <li class="py-2"><a href="/html/category/article-1389.htm">vue init download template_vue.extend和vue.component的区别</a></li>
                                                                                    </ul>
                                    </div>
                                </div>
                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4596.htm" title="嘉兴美团共享单车范围(嘉兴美团电单车怎么收费标准)">嘉兴美团共享单车范围(嘉兴美团电单车怎么收费标准)</a></li>
                        <li class="py-2"><a href="/html/category/article-4412.htm" title="最有名的动物医院排名（最有名的动物医院排名第一）">最有名的动物医院排名（最有名的动物医院排名第一）</a></li>
                        <li class="py-2"><a href="/html/category/article-5939.htm" title="里泽镇属于哪个县（里泽中心学校官网）">里泽镇属于哪个县（里泽中心学校官网）</a></li>
                        <li class="py-2"><a href="/html/category/article-6158.htm" title="我被猫咬了一下25天了没***但心跳加速（我被猫咬了一下25天了没***但心跳加速正常吗）">我被猫咬了一下25天了没***但心跳加速（我被猫咬了一下25天了没***但心跳加速正常吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6070.htm" title="小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）">小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）</a></li>
                        <li class="py-2"><a href="/html/category/article-7131.htm" title="c开头的口红品牌有哪些牌子(c开头的口红品牌有哪些好)">c开头的口红品牌有哪些牌子(c开头的口红品牌有哪些好)</a></li>
                        <li class="py-2"><a href="/html/category/article-4595.htm" title="金融监督局 银保监局(金融监督管理局与银保监局区别)">金融监督局 银保监局(金融监督管理局与银保监局区别)</a></li>
                        <li class="py-2"><a href="/html/category/article-6670.htm" title="国内十大宠物粮食品牌（国内十大宠物粮食品牌排名）">国内十大宠物粮食品牌（国内十大宠物粮食品牌排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-6203.htm" title="被猫爪子勾了一下出了一点血会死吗会感染吗（被猫爪子勾了一下出了一点血需要打疫苗吗）">被猫爪子勾了一下出了一点血会死吗会感染吗（被猫爪子勾了一下出了一点血需要打疫苗吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6992.htm" title="三国杀击杀特效哪个好看（三国杀哪些皮肤有击杀特效）">三国杀击杀特效哪个好看（三国杀哪些皮肤有击杀特效）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>