<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1530.htm" />
    <title>ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> 4.3.1控制何时使用字段</li> <li><i class="be be-arrowright"></i> 4.3.2没有属性的字段</li> </ul><span class="log-zd"><span class="log-close"><i class="be be-cross"></i><strong>目录</strong></span></span></div>  			</div> <div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>1.索引</li> <ul class="second_class_ul"> <li>1.1约定</li> <li>1.2数据批注</li> <li>1.3Fluent API</li> </ul> <li>2.备用键</li> <ul class="second_class_ul"> <li>2.1约定</li> <li>2.2数据注释</li> <li>2.3Fluent API</li> </ul> <li>3.继承</li> <ul class="second_class_ul"> <li>3.1约定</li> </ul> <li>4.支持字段</li> <ul class="second_class_ul"> <li>4.1约定</li> <li>4.2数据注释</li> <li>4.3Fluent API</li> <ul class="third_class_ul"> <li>4.3.1控制何时使用字段</li> <li>4.3.2没有属性的字段</li> </ul> </ul> </ul> </div> <p class="maodian"></p> <h2>1.索引</h2> <p>索引是跨多个数据存储区的常见概念。尽管它们在数据存储中的实现可能会有所不同，但也可用于基于列（或一组列）更高效地进行查找。</p> <p class="maodian"></p> <h3>1.1约定</h3> <p>按照约定，将在用作外键的每个属性（或一组属性）中创建索引。</p> <p class="maodian"></p> <h3>1.2数据批注</h3> <p>不能使用数据批注创建索引。</p> <p class="maodian"></p> <h3>1.3Fluent API</h3> <p>您可以使用熟知的API来指定单个属性的索引。默认情况下，索引不是唯一的。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Blog>()              //配置索引              .HasIndex(b => b.Url);      }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }  }</pre> </div> <p>您还可以指定索引应是唯一的，这意味着对于给定的属性，不能有两个实体具有相同的值。</p> <div class="ay1code"> <pre class="brush:csharp;">modelBuilder.Entity<Blog>()  .HasIndex(b => b.Url)  .IsUnique();</pre> </div> <p>您还可以为多个列指定索引。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Person> People { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Person>()              .HasIndex(p => new { p.FirstName, p.LastName });      }  }  public class Person  {      public int PersonId { get; set; }      public string FirstName { get; set; }      public string LastName { get; set; }  }</pre> </div> <p class="maodian"></p> <h2>2.备用键</h2> <p>备用键与主键相对，用作每个实体实例的备用唯一标识符。备用键可用作关系的目标。使用关系数据库时，这将映射到备用键列上的唯一索引/约束和引用列的一个或多个外键约束的概念。系统通常会在需要时为你引入备用键，你无需手动配置它们。</p> <p class="maodian"></p> <h3>2.1约定</h3> <p>按照约定，系统将在识别属性（不是主键）时为你引入备用键，充当关系的目标。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      public DbSet<Post> Posts { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Post>()              .HasOne(p => p.Blog)              .WithMany(b => b.Posts)              .HasForeignKey(p => p.BlogUrl)              .HasPrincipalKey(b => b.Url);      }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }            public List<Post> Posts { get; set; }  }  public class Post  {      public int PostId { get; set; }      public string Title { get; set; }      public string Content { get; set; }      //备用键      public string BlogUrl { get; set; }      public Blog Blog { get; set; }  }</pre> </div> <p class="maodian"></p> <h3>2.2数据注释</h3> <p>不能使用数据注释配置备用键。</p> <p class="maodian"></p> <h3>2.3Fluent API</h3> <p>你可以使用熟知的API将单个属性配置为备用密钥。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Car> Cars { get; set; }        protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Car>()              //配置为备用密钥              .HasAlternateKey(c => c.LicensePlate);      }  }  class Car  {      public int CarId { get; set; }      public string LicensePlate { get; set; }      public string Make { get; set; }      public string Model { get; set; }  }  你还可以使用熟知的API将多个属性配置为备用密钥（称为复合备用键）。  class MyContext : DbContext  {      public DbSet<Car> Cars { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Car>()              //配置为备用密钥              .HasAlternateKey(c => new { c.State, c.LicensePlate });      }  }  class Car  {      public int CarId { get; set; }      public string State { get; set; }      public string LicensePlate { get; set; }      public string Make { get; set; }      public string Model { get; set; }  }</pre> </div> <p class="maodian"></p> <h2>3.继承</h2> <p>EF模型中的继承用于控制如何在数据库中表示实体类中的继承。</p> <p class="maodian"></p> <h3>3.1约定</h3> <p>按照约定，由数据库提供商确定如何在数据库中表示继承。有关如何使用关系数据库提供程序来处理此情况的详细说明。如果模型中显式包括两个或更多个继承类型，则EF仅会设置继承。EF不会扫描模型中未包含的基类型或派生类型。可以通过为继承层次结构中的每个类型公开DbSet，在模型中包含类型。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      public DbSet<RssBlog> RssBlogs { get; set; }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }  }  public class RssBlog : Blog  {      public string RssUrl { get; set; }  }</pre> </div> <p>如果不想公开层次结构中一个或多个实体的DbSet，可以使用熟知的API来确保它们包含在模型中。如果不依赖约定，则可以使用HasBaseType显式指定基类型。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<RssBlog>().HasBaseType<Blog>();      }  }</pre> </div> <p class="maodian"></p> <h2>4.支持字段</h2> <p>支持字段允许EF读取和写入字段，而不是属性。当使用类中的封装来限制或通过应用程序代码对数据访问进行限制时，这可能很有用，但在不使用这些限制的情况下，应从数据库中读取或写入值。</p> <p class="maodian"></p> <h3>4.1约定</h3> <p>按照约定，将发现以下字段作为给定属性的支持字段（按优先级顺序列出）。仅为模型中包含的属性发现字段。</p> <div class="ay1code"> <pre class="brush:csharp;">public class Blog  {      private string _url;      public int BlogId { get; set; }      public string Url      {          get { return _url; }          set { _url = value; }      }  }</pre> </div> <p>配置了支持字段后，当从数据库具体化实体实例（而不是使用属性资源库）时，EF将直接写入该字段。如果EF需要在其他时间读取或写入值，则它将使用属性（如果可能）。例如，如果EF需要更新某个属性的值，则它将使用属性setter（如果已定义）。如果该属性为只读，则它将写入字段。</p> <p class="maodian"></p> <h3>4.2数据注释</h3> <p>不能通过数据批注配置支持字段。</p> <p class="maodian"></p> <h3>4.3Fluent API</h3> <p>你可以使用熟知的API来配置属性的支持字段。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Blog>()              .Property(b => b.Url)              .HasField("_validatedUrl");      }  }  public class Blog  {      private string _validatedUrl;      public int BlogId { get; set; }      public string Url      {          get { return _validatedUrl; }      }      public void SetUrl(string url)      {          using (var client = new HttpClient())          {              var response = client.GetAsync(url).Result;              response.EnsureSuccessStatusCode();          }          _validatedUrl = url;      }  }</pre> </div> <p class="maodian"></p> <span class="directory"></span><h4 id="title-0">4.3.1控制何时使用字段</h4> <p>可以配置EF何时使用字段或属性。有关支持的选项，请参阅PropertyAccessMode枚举。</p> <div class="ay1code"> <pre class="brush:csharp;">modelBuilder.Entity<Blog>()      .Property(b => b.Url)      .HasField("_validatedUrl")      .UsePropertyAccessMode(PropertyAccessMode.Field);</pre> </div> <p class="maodian"></p> <span class="directory"></span><h4 id="title-1">4.3.2没有属性的字段</h4> <p>你还可以在你的模型中创建一个概念属性，该属性在实体类中不具有相应的CLR属性，而是使用字段来存储实体中的数据。这不同于阴影属性，其中的数据存储在更改跟踪器中。如果实体类使用方法获取或设置值，通常会使用此方法。可以在Property(...) API中为EF指定字段的名称。如果没有具有给定名称的属性，则EF将查找字段。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet<Blog> Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity<Blog>()              .Property("_validatedUrl");      }  }  public class Blog  {      private string _validatedUrl;      public int BlogId { get; set; }      public string GetUrl()      {          return _validatedUrl;      }      public void SetUrl(string url)      {          using (var client = new HttpClient())          {              var response = client.GetAsync(url).Result;              response.EnsureSuccessStatusCode();          }          _validatedUrl = url;      }  }</pre> </div> <p>您还可以选择为属性指定名称，而不是字段名称。然后，在创建模型时使用此名称，最值得注意的是，该名称将用于在数据库中映射到的列名称。</p> <div class="ay1code"> <pre class="brush:csharp;">protected override void OnModelCreating(ModelBuilder modelBuilder)  {      modelBuilder.Entity<Blog>()          .Property<string>("Url")          .HasField("_validatedUrl");  }</pre> </div> <p>如果实体类中没有属性，则可以在LINQ查询中使用EF.Property(...)方法来引用概念上是模型的一部分的属性。</p> <div class="ay1code"> <pre class="brush:csharp;">var blogs = db.blogs.OrderBy(b => EF.Property<string>(b, "Url"));</pre> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1529.htm">vue项目如何查看vue版本号</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1531.htm">Spring @Scheduled 任务 参数动态配置</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6114.htm" title="为什么养猫家里阴气重（什么属相的人养猫最旺）">为什么养猫家里阴气重（什么属相的人养猫最旺）</a></li>
                        <li class="py-2"><a href="/html/category/article-6993.htm" title="南京宠物寄养（南京宠物寄养家庭）">南京宠物寄养（南京宠物寄养家庭）</a></li>
                        <li class="py-2"><a href="/html/category/article-6578.htm" title="被猫抓伤有一点血要打蛋白吗（被猫抓了出一点血要打蛋白吗）">被猫抓伤有一点血要打蛋白吗（被猫抓了出一点血要打蛋白吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6809.htm" title="动物疫苗接种方法视频教学 动物疫苗接种方法视频教学全集">动物疫苗接种方法视频教学 动物疫苗接种方法视频教学全集</a></li>
                        <li class="py-2"><a href="/html/category/article-6159.htm" title="蓝莓酒的泡制方法,酿造你的独特风味是什么(蓝莓酒的泡制方法,酿造你的独特风味)">蓝莓酒的泡制方法,酿造你的独特风味是什么(蓝莓酒的泡制方法,酿造你的独特风味)</a></li>
                        <li class="py-2"><a href="/html/category/article-6115.htm" title="国内十大宠物粮食品牌排行榜前十名图片（宠物粮品牌大全）">国内十大宠物粮食品牌排行榜前十名图片（宠物粮品牌大全）</a></li>
                        <li class="py-2"><a href="/html/category/article-6202.htm" title="南京领养狗狗的地方有哪些（南京哪里有领养狗狗的地方）">南京领养狗狗的地方有哪些（南京哪里有领养狗狗的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6855.htm" title="卫生纸品牌加盟 开个卫生纸专卖店怎么样(卫生纸品牌加盟 开个卫生纸专卖店要多少钱)">卫生纸品牌加盟 开个卫生纸专卖店怎么样(卫生纸品牌加盟 开个卫生纸专卖店要多少钱)</a></li>
                        <li class="py-2"><a href="/html/category/article-7637.htm" title="动物医院社会实践报告范文 动物医院社会实践报告范文怎么写">动物医院社会实践报告范文 动物医院社会实践报告范文怎么写</a></li>
                        <li class="py-2"><a href="/html/category/article-6763.htm" title="动物医院英语短语怎么说怎么写的（动物医院的英文单词）">动物医院英语短语怎么说怎么写的（动物医院的英文单词）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>