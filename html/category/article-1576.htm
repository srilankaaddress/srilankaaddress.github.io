<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1576.htm" />
    <title>vuex几大模块和Vuex助手使用详解 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">vuex几大模块和Vuex助手使用详解</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理库，用于保存用用程序的状态，即信息或数据，使得Vuex使应用程序的所有组件可以共享数据。每一个 Vuex 应用的核心就是 store（仓库），包含着你的应用中大部分的状态 ( state )，改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。</p> <h2> <a id="1Vuex_1" rel="nofollow"></a>1、Vuex主要有以下几个模块</h2> <ol> <li>state：定义了应用程序的数据，可以设置默认的初始状态。</li> <li>getters：允许组件从 store 中获取数据 。</li> <li>mutations：是唯一更改 store 中状态的方法，且必须是同步函数。但不可以直接调用mutation，必须使用commit函数来告诉Vuex更新存储并提交更改。</li> <li>actions：执行异步操作来存取状态，但也不可以直接调用action，必须使用dispatch函数来执行。<br /> 代码演示：</li> </ol> <pre><code class="prism language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> 	<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 		<span class="token comment">//定义状态，并赋予初始值</span> 		state<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			msg<span class="token punctuation">:</span><span class="token string">'Vuex的使用'</span><span class="token punctuation">,</span> 			count<span class="token punctuation">:</span><span class="token number">0</span> 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//使用getter来返回状态</span> 		getters<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">msg</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> state<span class="token punctuation">.</span>msg<span class="token punctuation">;</span> 			<span class="token punctuation">}</span><span class="token punctuation">,</span> 			<span class="token function">count</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> state<span class="token punctuation">.</span>count<span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//可以理解为其他语言中的setter，改变状态的值，此处为把传进来的参数step累加到count中</span> 		mutations<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				state<span class="token punctuation">.</span>count <span class="token operator">+=</span> step<span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//模拟服务器延迟1秒</span> 		<span class="token comment">//通过commit调用来触发mutations对象中的increment方法，并把参数step传递给increment</span> 		actions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 					context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'increment'</span><span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">//创建Vue实例</span> 	<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 		el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span> 		 		computed<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token comment">//可以直接通过计算属性直接获取store.state中的状态</span> 			<span class="token function">msg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>msg<span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token comment">//通过计算属性来返回getters中的count</span> 			<span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>count<span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token comment">//调用dispatch方法来派发actions中的increment方法，并把参数2传递给increment</span> 				store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'increment'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span> </code></pre> <h2> <a id="2Vuex_66" rel="nofollow"></a>2、Vuex助手</h2> <p>Vuex为我们提供了一些辅助工具，如mapStates，mapGetters，mapMutations，mapActions，从而来减少繁杂的工作量。<br /> 对于使用mapStates,mapGetters，可以把所有的state，getter添加到计算属性中，而不用向上面代码那样逐个添加。<br /> 在使用这些助手时，必须引入。拿mapGetters举例，其他类似。</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>mapGetters<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span> </code></pre> <p>代码演示：</p> <pre><code class="prism language-javascript">computed<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span>mapState<span class="token punctuation">{<!-- --></span><span class="token punctuation">[</span> 		<span class="token string">'state1'</span><span class="token punctuation">,</span> 		<span class="token string">'state2'</span><span class="token punctuation">,</span> 	<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 	<span class="token operator">...</span>mapGetters<span class="token punctuation">{<!-- --></span><span class="token punctuation">[</span> 		<span class="token string">'count1'</span><span class="token punctuation">,</span> 		<span class="token string">'count2'</span><span class="token punctuation">,</span> 	<span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>对于mapMutations,mapActions，可以在methods属性中使用，把多个mutation和action映射到应用程序。<br /> 代码演示：</p> <pre><code class="prism language-javascript">methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span> 		<span class="token comment">//mut1将this.mut1()映射到this.$store.commit('mut1'),mut2类似</span> 		<span class="token comment">//这样就不同创建每个方法，派发每个action</span> 		<span class="token string">'mut1'</span><span class="token punctuation">,</span> 		<span class="token string">'mut2'</span> 	<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>代码演示：</p> <pre><code class="prism language-javascript">methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span> 		<span class="token comment">//act1将this.act1()映射到this.$store.dispatch('act1'),act2类似</span> 		<span class="token string">'act1'</span><span class="token punctuation">,</span> 		<span class="token string">'act2'</span> 	<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="3Vuex_114" rel="nofollow"></a>3、Vuex模块</h2> <p>当应用程序很大时，需要划分模块，Vuex.Store实例中将增加mudules对象。<br /> 把state，getter，mutation，action对象创建在一个单独的xxx.js文件中，xxx.js在modules目录下。<br /> 代码演示：</p> <pre><code class="prism language-javascript"><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	state1<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	get1<span class="token punctuation">:</span>state <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>state1 <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	initState<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	setState<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">//导出以上四个对象</span> <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{<!-- --></span> 	state<span class="token punctuation">,</span> 	getters<span class="token punctuation">,</span> 	mutations<span class="token punctuation">,</span> 	actions <span class="token punctuation">}</span> </code></pre> <p>使用模块，在yyy.js文件中引入模块，yyy.js在store目录下。<br /> 代码演示：</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span> impoet Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> xxx <span class="token keyword">from</span> <span class="token string">'./modules/xxx'</span><span class="token punctuation">;</span>  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 	modules<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 		<span class="token comment">//对应上面引入的xxx</span> 		xxx 	<span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>另外，由于Vuex中所有内容共享相同的全局名称空间，当在两个不同文件中分别命名相同的state或getter或mutation或action，就会发生冲突，报错duplicate getter key。<br /> 可以在Vuex.store文件顶部设置namespaced:true，用于分解每个名称空间的模块。</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1575.htm">经典数据结构解决迷宫问题（Python实现）</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1577.htm">springboot 中注解@Async失效的情况</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1615.htm" title="使用 Docker 搭建 Confluence">使用 Docker 搭建 Confluence</a></li>
                        <li class="py-2"><a href="/html/category/article-4106.htm" title="JAVA容器详解">JAVA容器详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1604.htm" title="go语言panic函数详解">go语言panic函数详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3434.htm" title="PHP取消引用方法详解">PHP取消引用方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1614.htm" title="我们如何更改MySQL AUTO_INCREMENT起始号码？">我们如何更改MySQL AUTO_INCREMENT起始号码？</a></li>
                        <li class="py-2"><a href="/html/category/article-1922.htm" title="SpringCloud 之Hystrix Dashboard 服务监控">SpringCloud 之Hystrix Dashboard 服务监控</a></li>
                        <li class="py-2"><a href="/html/category/article-4078.htm" title="Android 弹窗设计规范">Android 弹窗设计规范</a></li>
                        <li class="py-2"><a href="/html/category/article-3740.htm" title="Vue中transition单个节点过渡与transition-group列表过渡全过程_vue.js">Vue中transition单个节点过渡与transition-group列表过渡全过程_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-1613.htm" title="vue 动态组件组件复用_真正的动态声明性组件">vue 动态组件组件复用_真正的动态声明性组件</a></li>
                        <li class="py-2"><a href="/html/category/article-1608.htm" title="linux下安装tomcat9,linux tomcat 9 安装及配置教程">linux下安装tomcat9,linux tomcat 9 安装及配置教程</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">2</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>