<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1378.htm" />
    <title>C语言算法进阶——递归 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">C语言算法进阶——递归</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li>前言</li> <li>一、递归是什么？</li> <li>二、递归的用途</li> <li> <ul> <li>1.解决一些数学问题</li> <li>2.简化链表中一些操作</li> <li>3.解决树的绝大多数问题</li> <li>3.使用递归技巧</li> </ul> </li> <li>三、总结</li> </ul> </div> <hr/> <h1> 前言</h1> <p>学习算法的过程中，总会遇到一个让你耳目一新，惊为天算的方法——递归</p> <hr/> <h1> 一、递归是什么？</h1> <p>1、递归的定义非常简单：函数直接或间接的调用自己；<br /> 2、但是在这短短几个字中，也蕴含着递归的思想：<strong>分而治之</strong>；<br /> 3、分而治之又是什么呢？其实也很简单，就是：将一个大问题分成多个小问题来解决；<br /> 4、递归分为两个过程，我个人喜欢称这两个过程为<strong>递</strong>和<strong>归</strong>；<br /> 5、递的过程就是分解大问题的过程，归的过程是整合小问题的过程，整体就像是栈，递是向栈中存数据，归是向栈中取数据。<br /> 说了这么多，递归到底是解决什么样的问题呢？</p> <h1> 二、递归的用途</h1> <h2> 1.解决一些数学问题</h2> <p>（1）斐波那契数列<br /> 题目：斐波那契数列：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …<br /> 求n阶斐波那契数列。</p> <pre><code class="prism language-c"><span class="token keyword">int</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>（2）小青蛙跳台阶<br /> 题目：一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法？</p> <pre><code class="prism language-c"><span class="token keyword">int</span> <span class="token function">numWays</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator"><</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token function">numWays</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">numWays</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h2> 2.简化链表中一些操作</h2> <p>（1）清空链表</p> <pre><code class="prism language-c"><span class="token keyword">void</span> <span class="token function">free_list</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span><span class="token punctuation">(</span>head<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span> <span class="token punctuation">;</span> 	head<span class="token operator">=</span>head<span class="token operator">-></span>next<span class="token punctuation">;</span> 	<span class="token function">free_list</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">free</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>（2）移除链表元素</p> <pre><code class="prism language-c"><span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> <span class="token function">removeElements</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span><span class="token punctuation">(</span>head<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> head<span class="token punctuation">;</span>     head<span class="token operator">-></span>next<span class="token operator">=</span><span class="token function">removeElements</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">,</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> head<span class="token operator">-></span>val<span class="token operator">==</span>val<span class="token operator">?</span>head<span class="token operator">-></span>next<span class="token operator">:</span>head<span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h2> 3.解决树的绝大多数问题</h2> <p>（1）树的反转</p> <pre><code class="prism language-c"><span class="token keyword">void</span> <span class="token function">reverse_tree</span><span class="token punctuation">(</span>Tree_Node <span class="token operator">*</span>root<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span> 		Tree_Node <span class="token operator">*</span>s<span class="token punctuation">;</span>         s <span class="token operator">=</span> root<span class="token operator">-></span>left<span class="token punctuation">;</span>         root<span class="token operator">-></span>left <span class="token operator">=</span> root<span class="token operator">-></span>right<span class="token punctuation">;</span>         root<span class="token operator">-></span>right <span class="token operator">=</span> s<span class="token punctuation">;</span>         <span class="token function">reverse_tree</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">reverse_tree</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（2）树的遍历</p> <pre><code class="prism language-c"><span class="token keyword">void</span> <span class="token function">pre_traverse</span><span class="token punctuation">(</span>Tree_Node <span class="token operator">*</span>root<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%-5d"</span><span class="token punctuation">,</span>root<span class="token operator">-></span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">pre_traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">pre_traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h2> 3.使用递归技巧</h2> <p>1、递归对解决链式结构问题有着天然优势，解决单链表通常只需要调用自己一次，解决二叉树通常要调用自己两次；<br /> 2、递归解决问题也分为两种方式，一个是在递的过程中解决问题，另一个是在归的过程中解决问题，比较经典的就是快速排序和归并排序(我之后会更新)。</p> <hr/> <h1> 三、总结</h1> <p>1、递归在使用中是非常灵活的，也是非常难去想的，往往一个小问题都会在大脑中一遍一遍的绕，直到大脑爆栈。<br /> 2、作为一个小白来说，写这篇进阶确实不太好驾驭，还需要通过做题去熟悉，去磨练自己，第一篇文章的每日一练其实本意是挺好的，但是之后的题我没有去发，看看之后补发一下。<br /> 3、引用一下力扣书中的一句话——<strong>学习好递归的重要方法是：先模仿，再练习</strong>，所以现在不会也没关系，多多模仿，懂我意思吧！</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1377.htm">SpringBoot实战数据访问整合Mybatis和Redis</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1379.htm">带你了解了解Future和CompletableFuture</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4412.htm" title="最有名的动物医院排名（最有名的动物医院排名第一）">最有名的动物医院排名（最有名的动物医院排名第一）</a></li>
                        <li class="py-2"><a href="/html/category/article-4559.htm" title="动物疫苗价格表最新图片大全（动物疫苗的使用方法及注意事项）">动物疫苗价格表最新图片大全（动物疫苗的使用方法及注意事项）</a></li>
                        <li class="py-2"><a href="/html/category/article-4525.htm" title="有哪些牌子的口红适合学生党(哪种口红适合学生党)">有哪些牌子的口红适合学生党(哪种口红适合学生党)</a></li>
                        <li class="py-2"><a href="/html/category/article-4413.htm" title="动物医院有宠物卖吗现在多少钱（动物医院贵吗）">动物医院有宠物卖吗现在多少钱（动物医院贵吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-4524.htm" title="不适合养猫的属相是（属什么不能养猫）">不适合养猫的属相是（属什么不能养猫）</a></li>
                        <li class="py-2"><a href="/html/category/article-1921.htm" title="IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退">IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退</a></li>
                        <li class="py-2"><a href="/html/category/article-4105.htm" title="Java：Arrays.fill() 方法">Java：Arrays.fill() 方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4489.htm" title="板栗乌鸡汤的做法与功效与作用(板栗乌鸡汤的做法大全)">板栗乌鸡汤的做法与功效与作用(板栗乌鸡汤的做法大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-3739.htm" title="ASP.NET Core中的Ocelot网关介绍_实用技巧">ASP.NET Core中的Ocelot网关介绍_实用技巧</a></li>
                        <li class="py-2"><a href="/html/category/article-1620.htm" title="Spring如何快速上手">Spring如何快速上手</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>