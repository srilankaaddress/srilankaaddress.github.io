<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1496.htm" />
    <title>Python，如何将元组中的元素作为参数传入函数 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">Python，如何将元组中的元素作为参数传入函数</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>本文由Markdown语法编辑器编辑完成。</p> <h2> 1. 需求：</h2> <p>现在有一个Python的需求需要实现：</p> <p>就是实现连接一次数据库，就能够执行多条SQL语句，而且这个SQL语句是需要通过调用者将每一次执行的参数传入进来，组合成一条完整的SQL语句再去执行。</p> <p>经过初步研究，传入参数时，通过数组的形式，数组中的每一个元素则是一个元组tuple（因为SQL中需要填入的参数可能是多个，所以需要通过元组的形式传入）。</p> <p>比如SQL语句的形式为：<br /> basic_sql = ‘SELECT * FROM series se where se.body_part like “%{}%” and se.modality = “{}”’<br /> 在这条SQL中，有两个变量需要传入，分别用{}表示，一个是序列的body_part, 一个是序列的modality。准备传入的参数为：<br /> [(‘Chest’, ‘CT’), (‘Lung’, ‘MRI’), (‘Leg’, ‘DR’)]等。</p> <p>希望通过以下的格式化函数，将参数传入：<br /> SELECT * FROM series se where se.body_part like “%{}%” and se.modality = “{}”.format(param1, param2) 这样。</p> <h2> 2. 函数实现：</h2> <p>虽然看起来这个需求非常明确，也比较简单。但是实现起来，还是花费了我好长的时间。究其原因，主要的困惑就是如何能够将这个参数传入到SQL中，并且去执行SQL。</p> <h3> 2.1 思路一：</h3> <p>在基于需求中提到的那个解决思路，我希望是拼接字符串，将拼接后的整个字符串作为完整的SQL语句，然后执行生成结果。</p> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">execute_multi_sql</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> params_list<span class="token punctuation">)</span><span class="token punctuation">:</span> 	result_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token keyword">try</span><span class="token punctuation">:</span>             self<span class="token punctuation">.</span>_db_connection <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_connection_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>             self<span class="token punctuation">.</span>_db_cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> 			<span class="token keyword">for</span> params <span class="token keyword">in</span> params_list<span class="token punctuation">:</span> 			    combined_sql <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> 			    combined_sql<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sql<span class="token punctuation">)</span> 			    combined_sql<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'.format('</span><span class="token punctuation">)</span> 			    combined_sql<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 			    combined_sql<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">)</span> 			    combined_sql <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>combined_sql<span class="token punctuation">)</span> 			    logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">"executing sql: %s"</span> <span class="token operator">%</span> combined_sql<span class="token punctuation">)</span> 			    self<span class="token punctuation">.</span>_db_cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>combined_sql<span class="token punctuation">)</span> 			    result <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span> 			    logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>u<span class="token string">"SQL语句已经被执行, 结果是:\n %s"</span> <span class="token operator">%</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> 			    result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span> 		<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>             logger<span class="token punctuation">.</span>exception<span class="token punctuation">(</span>u<span class="token string">"执行sql语句时，发生了错误: %s"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>             <span class="token keyword">raise</span>         <span class="token keyword">finally</span><span class="token punctuation">:</span>             self<span class="token punctuation">.</span>_db_connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token keyword">return</span> result_list </code></pre> <p>但是在执行这个函数的时候，会报异常，异常说明是：tuple out of bounds.<br /> 以下是问题产生的原因：</p> <h3> 2.2 思路二：</h3> <p>通过google搜索，最终找到的解决方案是如下链接所示：<br /><strong>expanding tuples into arguments.</strong><br />https://stackoverflow.com/questions/1993727/expanding-tuples-into-arguments</p> <pre><code class="prism language-python"><span class="token keyword">from</span> DBUtils<span class="token punctuation">.</span>PooledDB <span class="token keyword">import</span> PooledDB <span class="token keyword">import</span> logging <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token keyword">def</span> <span class="token function">execute_multi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> params_list<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>params_list<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>u<span class="token string">'传入参数要求是列表类型,请检查传入参数类型!'</span><span class="token punctuation">)</span>         result_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token keyword">try</span><span class="token punctuation">:</span>             self<span class="token punctuation">.</span>_db_connection <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_connection_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>             self<span class="token punctuation">.</span>_db_cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">for</span> params <span class="token keyword">in</span> params_list<span class="token punctuation">:</span>                 <span class="token comment"># 将每一个元组中存的参数传入format中,替换sql中的变量值.</span>                 <span class="token comment"># 如果数组中的元素不是元组,则sql中只有一个变量需要替换,将参数直接替换.</span>                 <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token builtin">tuple</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                     combined_sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span>                 <span class="token keyword">else</span><span class="token punctuation">:</span>                     combined_sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>                  logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">"executing sql: %s"</span> <span class="token operator">%</span> combined_sql<span class="token punctuation">)</span>                 self<span class="token punctuation">.</span>_db_cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>combined_sql<span class="token punctuation">)</span>                 result <span class="token operator">=</span> self<span class="token punctuation">.</span>_db_cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>                 logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>u<span class="token string">"SQL语句已经被执行, 结果是:\n %s"</span> <span class="token operator">%</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>                     result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span>         <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>             logger<span class="token punctuation">.</span>exception<span class="token punctuation">(</span>u<span class="token string">"执行sql语句时，发生了错误: %s"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>             <span class="token keyword">raise</span>         <span class="token keyword">finally</span><span class="token punctuation">:</span>             self<span class="token punctuation">.</span>_db_connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token keyword">return</span> result_list </code></pre> <p>这段代码中，最主要的修改就是关于处理参数的部分. 由于传入的参数是一个数组，数组中的每一个元素是一个tuple, tuple内的元素个数是由第2个参数sql中需要传入的参数个数对应的。如上述需求中提到的，传入的sql中需要补充两个参数值，分别是body_part和modality, 因此数组中每一个tuple的长度也是2.<br /> 这样通过*tuple的方式，可以依次取出tuple中的每一个元素作为变量，传入前面的sql语句中，组成一个完整的sql语句。然后再调用db.execute, 便可以获取到查询结果.</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1495.htm">Python高级语法之装饰器</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1497.htm">iOS全埋点解决方案-控件点击事件</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6624.htm" title="海拉鲁北侧神庙（海拉鲁丘陵神庙）">海拉鲁北侧神庙（海拉鲁丘陵神庙）</a></li>
                        <li class="py-2"><a href="/html/category/article-6070.htm" title="小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）">小型饲料颗粒机原理动态图片大全（小型饲料颗粒机工作原理）</a></li>
                        <li class="py-2"><a href="/html/category/article-3766.htm" title="vue更新数据后重新请求数据并刷新页面">vue更新数据后重新请求数据并刷新页面</a></li>
                        <li class="py-2"><a href="/html/category/article-6071.htm" title="白蔻野姜红烧猪蹄的做法大全(白蔻野姜红烧猪蹄的做法和功效)">白蔻野姜红烧猪蹄的做法大全(白蔻野姜红烧猪蹄的做法和功效)</a></li>
                        <li class="py-2"><a href="/html/category/article-4106.htm" title="JAVA容器详解">JAVA容器详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4078.htm" title="Android 弹窗设计规范">Android 弹窗设计规范</a></li>
                        <li class="py-2"><a href="/html/category/article-4595.htm" title="金融监督局 银保监局(金融监督管理局与银保监局区别)">金融监督局 银保监局(金融监督管理局与银保监局区别)</a></li>
                        <li class="py-2"><a href="/html/category/article-5580.htm" title="宠物领养哪个平台好（哪个平台可以领养宠物）">宠物领养哪个平台好（哪个平台可以领养宠物）</a></li>
                        <li class="py-2"><a href="/html/category/article-4412.htm" title="最有名的动物医院排名（最有名的动物医院排名第一）">最有名的动物医院排名（最有名的动物医院排名第一）</a></li>
                        <li class="py-2"><a href="/html/category/article-4333.htm" title="动物接种疫苗,剂量越大越好吗,为什么?（动物注射疫苗）">动物接种疫苗,剂量越大越好吗,为什么?（动物注射疫苗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>