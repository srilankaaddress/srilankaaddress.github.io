<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1554.htm" />
    <title>建造者模式（实例） - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">建造者模式（实例）</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>目录</h3> <ul> <li>建造者模式</li> <li> <ul> <li>1、模式结构</li> <li>2、模式实例</li> <li> <ul> <li>2.1 应用场景类图</li> <li>2.2 代码实现</li> </ul> </li> <li>3、模式分析</li> <li> <ul> <li>3.1 优点</li> <li>3.2 缺点</li> <li>3.3 适用场景</li> </ul> </li> </ul> </li> </ul> </div> <h1> 建造者模式</h1> <p>  建造者模式是一种对象创建型模式，它允许用户只通过复杂对象的类型和内容就可以构建它们，而不需要用户知道内部的具体细节。建造者模式是将一个复杂对象的构建与它的表示进行分离，使得一个相同的构建过程可以创建不同的表示。</p> <h2> 1、模式结构</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/d954663405cc98be9f416f4b7bf051f4.jpg" alt="建造者模式（实例）"><br />   Director：指挥者，用于构造使用Builder接口的对象。<br />   Builder：抽象建造者，定义产品对象的各个部件的抽象接口。<br />   ConcreteBuilder：具体建造者，实现Builder的接口用于构造和装配该产品的各个部件。<br />   Product：产品角色。</p> <h2> 2、模式实例</h2> <p>  一个汽车大致是由轮胎、方向盘、发动机等配件组成，汽车厂的员工可以根据顾客的不同要求适用不同型号的配件进行组装汽车构造成一个完整的汽车，可以使用建造者模式实现。</p> <h3> 2.1 应用场景类图</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/f2f551d24f0a9e14dd130114fbdc337a.jpg" alt="建造者模式（实例）"></p> <h3> 2.2 代码实现</h3> <p>（1）Car.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">private</span> String tyre<span class="token punctuation">;</span>  <span class="token comment">//轮胎</span> 	<span class="token keyword">private</span> String fangxiangpan<span class="token punctuation">;</span><span class="token comment">//方向盘</span> 	<span class="token keyword">private</span> String engine<span class="token punctuation">;</span>  <span class="token comment">//发动机</span> 	<span class="token keyword">public</span> String <span class="token function">getTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> tyre<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTyre</span><span class="token punctuation">(</span>String tyre<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>tyre <span class="token operator">=</span> tyre<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> String <span class="token function">getFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> fangxiangpan<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFangxiangpan</span><span class="token punctuation">(</span>String fangxiangpan<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>fangxiangpan <span class="token operator">=</span> fangxiangpan<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> String <span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> engine<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEngine</span><span class="token punctuation">(</span>String engine<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（2）CarBuilder.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">CarBuilder</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">protected</span> Car car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">buildTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">buildFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">buildEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	 	<span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> car<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（3）SubCarBuilderA.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubCarBuilderA</span> <span class="token keyword">extends</span> <span class="token class-name">CarBuilder</span><span class="token punctuation">{<!-- --></span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setTyre</span><span class="token punctuation">(</span><span class="token string">"轮胎A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setFangxiangpan</span><span class="token punctuation">(</span><span class="token string">"方向盘A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setEngine</span><span class="token punctuation">(</span><span class="token string">"发动机A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（4）SubCarBuilderB.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubCarBuilderB</span> <span class="token keyword">extends</span> <span class="token class-name">CarBuilder</span><span class="token punctuation">{<!-- --></span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setTyre</span><span class="token punctuation">(</span><span class="token string">"轮胎B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setFangxiangpan</span><span class="token punctuation">(</span><span class="token string">"方向盘B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token annotation punctuation">@Override</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buildEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		car<span class="token punctuation">.</span><span class="token function">setEngine</span><span class="token punctuation">(</span><span class="token string">"发动机B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（5）Employee.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">private</span> CarBuilder cBuilder<span class="token punctuation">;</span> 	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCarBuilder</span><span class="token punctuation">(</span>CarBuilder cBuilder<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>cBuilder <span class="token operator">=</span> cBuilder<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">public</span> Car <span class="token function">construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		cBuilder<span class="token punctuation">.</span><span class="token function">buildEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		cBuilder<span class="token punctuation">.</span><span class="token function">buildFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		cBuilder<span class="token punctuation">.</span><span class="token function">buildTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">return</span> cBuilder<span class="token punctuation">.</span><span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（6）Client.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token comment">//获取用户确定的汽车组成套餐</span> 		CarBuilder carBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>CarBuilder<span class="token punctuation">)</span>XMLUtil<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">//由员工准备该套餐的车子</span> 		Employee employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		employee<span class="token punctuation">.</span><span class="token function">setCarBuilder</span><span class="token punctuation">(</span>carBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span> 		Car car <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的车子由以下配置组成："</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"方向盘型号："</span><span class="token operator">+</span>car<span class="token punctuation">.</span><span class="token function">getFangxiangpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"发动机型号："</span><span class="token operator">+</span>car<span class="token punctuation">.</span><span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"轮胎型号："</span><span class="token operator">+</span>car<span class="token punctuation">.</span><span class="token function">getTyre</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（7）XMLUtil.java</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XMLUtil</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		DocumentBuilderFactory dFactory <span class="token operator">=</span> DocumentBuilderFactory<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span> 			DocumentBuilder builder <span class="token operator">=</span> dFactory<span class="token punctuation">.</span><span class="token function">newDocumentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			Document document <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"./config/builder.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			 			NodeList nList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"className"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			Node classNode  <span class="token operator">=</span> nList<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirstChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			String carBrand <span class="token operator">=</span>classNode<span class="token punctuation">.</span><span class="token function">getNodeValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			 			<span class="token comment">//通过类名生成实例对象并将其返回</span>             Class <span class="token class-name">c</span><span class="token operator">=</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>carBrand<span class="token punctuation">)</span><span class="token punctuation">;</span> 	  	    Object obj<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> obj<span class="token punctuation">;</span> 		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token keyword">return</span> null<span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>（8）builder.xml</p> <pre><code class="prism language-java"><span class="token generics function"><span class="token punctuation"><</span>config<span class="token punctuation">></span></span> 	<span class="token generics function"><span class="token punctuation"><</span>className<span class="token punctuation">></span></span>gc<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>SubCarBuilderA<span class="token operator"><</span><span class="token operator">/</span>className<span class="token operator">></span> <span class="token operator"><</span><span class="token operator">/</span>config<span class="token operator">></span> </code></pre> <h2> 3、模式分析</h2> <p>  建造者模式分离了产品本身和产品的创建过程，实现了解耦，使得相同的创建过程可以用于创建不同的产品对象，用户只需要指定对象的类型和内容就可以创键它们。</p> <h3> 3.1 优点</h3> <p>（1）使得用户端无需确定产品内部组成的细节与装配方式，只需要知道自己所需建造者的类型即可。<br /> （2）具体的建造者之间相互独立，互不影响，可以很方便地进行具体建造者之间的替换和新增具体建造者，符合设计模式的开闭原则。</p> <h3> 3.2 缺点</h3> <p>（1）如果一个产品之间内部变化复杂，就需要定义许多具体建造者去实现，这样就会导致系统的理解程度和运行成本的增加。<br /> （2）适用范围具有一定局限性，只适用于相似的产品之间，这些产品之间要具有较多的相同的组成部分。</p> <h3> 3.3 适用场景</h3> <p>  需要生成的产品具有较多的相同点，它们的组成部分相似，具有较为复杂的内部结构，这些结构可以分离独立。</p> <p>参考文献：设计模式（第2版）.清华出版社</p> </p></div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1553.htm">win10下查看pyttorch实际使用的cuda版本，安装多个cuda(cuda9.0和10.0)，并切换cuda版本</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1555.htm">从JS执行栈角度图解递归以及二叉树的前、中、后遍历的底层差异 _在线工具</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7544.htm" title="宠物医院参观体会（参观宠物医院实验报告）">宠物医院参观体会（参观宠物医院实验报告）</a></li>
                        <li class="py-2"><a href="/html/category/article-6992.htm" title="三国杀击杀特效哪个好看（三国杀哪些皮肤有击杀特效）">三国杀击杀特效哪个好看（三国杀哪些皮肤有击杀特效）</a></li>
                        <li class="py-2"><a href="/html/category/article-7774.htm" title="青岛市动物疾病防控中心（青岛市动物疫病防疫中心）">青岛市动物疾病防控中心（青岛市动物疫病防疫中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-8097.htm" title="动物疫苗分几种种类的（动物疫苗包括哪些）">动物疫苗分几种种类的（动物疫苗包括哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-7084.htm" title="动物疫苗在常温下能放多久不变质呢视频（动物疫苗未冷藏几小时失效）">动物疫苗在常温下能放多久不变质呢视频（动物疫苗未冷藏几小时失效）</a></li>
                        <li class="py-2"><a href="/html/category/article-7223.htm" title="一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词">一片枫叶一片红 一片枫叶一片红那首歌里有这个歌词</a></li>
                        <li class="py-2"><a href="/html/category/article-7222.htm" title="长得最快的植物是什么 （走进十大快速生长树木!）">长得最快的植物是什么 （走进十大快速生长树木!）</a></li>
                        <li class="py-2"><a href="/html/category/article-7360.htm" title="科学家振动一盒粒子，形成了一种奇怪的新材料：">科学家振动一盒粒子，形成了一种奇怪的新材料：</a></li>
                        <li class="py-2"><a href="/html/category/article-7315.htm" title="预制菜包装袋可以直接加热嘛">预制菜包装袋可以直接加热嘛</a></li>
                        <li class="py-2"><a href="/html/category/article-7913.htm" title="动物防疫法适用于牛蛙吗（动物防疫法解读）">动物防疫法适用于牛蛙吗（动物防疫法解读）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>