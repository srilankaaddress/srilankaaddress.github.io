<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1607.htm" />
    <title>ASP.NET和ASP.NETCore多环境配置对比 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">ASP.NET和ASP.NETCore多环境配置对比</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<h2 id="前言">前言</h2> <p>多环境配置应该都很熟悉了，最为常见的环境便是<code>Debug</code>和<code>Release</code>，例如下图是新建的一个<code>asp.net</code>项目，配置文件展开共有三个文件组成<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1eb50f36acf53049a834b9b70a1db59f.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 有些开发者从来没了解过<code>Web.Debug.config</code>和<code>Web.Release.config</code>，始终是一个<code>Web.config</code>文件改来改去来切换不同的配置，但凡有点追求都不能忍受这种煎熬。</p> <h2 id="aspnet下的多环境配置">asp.net下的多环境配置</h2> <p>双击打开<code>Web.Debug.config</code>和<code>Web.Release.config</code>任何一个，看看里面的内容。</p> <pre><code>Web.Debug.config</code></pre> <pre><code class="language-xml"><?xml version="1.0" encoding="utf-8"?>  <!-- 有关使用 Web.config 转换的详细信息，请访问 https://go.microsoft.com/fwlink/?LinkId=301874 -->  <configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">   <!--     在下例中，“SetAttributes”转换将更改     “connectionString”的值，仅在“Match”定位器找到值为“MyDB”的     特性“name”时使用“ReleaseSQLServer”。      <connectionStrings>            </connectionStrings>   -->   <system.web>     <!--       在以下示例中，"Replace" 转换将替换 Web.config 文件的       整个 <customErrors> 节。       请注意，由于在 <system.web> 节点下只有一个        customErrors 节，因此无需使用 "xdt:Locator" 属性。        <customErrors defaultRedirect="GenericError.htm"         mode="RemoteOnly" xdt:Transform="Replace">         <error statusCode="500" redirect="InternalError.htm"/>       </customErrors>     -->   </system.web> </configuration></code></pre> <p>微软为了让我们使用它，把不仅给出示例，还配上详细的注释，看过注释和示例大概就该知道如何进行配置，覆盖<code>Web.config</code>中的配置。<br /> 下面展示下最为常用的<code>appSettings</code>如何配置</p> <pre><code class="language-xml">  <!--Web.config 开发环境-->   <appSettings>     <add key="webpages:Version" value="3.0.0.0" />     <add key="webpages:Enabled" value="false" />     <add key="ClientValidationEnabled" value="true" />     <add key="UnobtrusiveJavaScriptEnabled" value="true" />          <add key="MyKey" value="Myvalue" />   </appSettings></code></pre> <pre><code class="language-xml">  <!--Web.Release.config 生产环境-->   <appSettings>     <add key="webpages:Version" value="3.0.0.0" />     <add key="webpages:Enabled" value="false" />     <add key="ClientValidationEnabled" value="true" />     <add key="UnobtrusiveJavaScriptEnabled" value="true" />          <add key="MyKey" value="Releasvalue" xdt:Transform="Replace" xdt:Locator="Match(key)" />   </appSettings></code></pre> <p>经过这样的配置后，本机开发时读取到<code>MyKey</code>的值为<code>Myvalue</code>,发布生产环境时值为<code>Releasvalue</code>。<br /> 按照上面的配置，本地发布程序试试效果。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f3285f53dbc263097d5638e7ff40c501.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 发布成功后，打开发布后生成的<code>Web.config</code>文件，我们发现开发环境下<code>Web.config</code>中对应的值被替换了，这样开发和生产配置分别配置在不同文件，不需要频繁修改配置文件切换配置了。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cfe58eb99d16001700a2795042d674b0.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"></p> <h3 id="如何增加额外的环境配置">如何增加额外的环境配置</h3> <p>有时候Debug和Release两个环境还不能满足我们的需要，需要增加更多的环境配置。<br /> 打开菜单生成-->配置管理器，新建一个<code>TEST1</code>环境<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/26bac684d3c678e3e25871fddbe6c166.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 然后右键<code>Web.config</code>选择<code>添加配置转换</code>（第四个）<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7b2e8a1131adc1caf081990d5b1e3ef2.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 会自动生成一个<code>Web.TEST1.config</code>文件，非常的人性化，然后我们在该文件配置一些参数。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/04c0cb8f85350e5eb54829e727267a7d.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 更改发布的配置，进行发布。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4455a813e2f0f6be9c452e57cb641653.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 打开发布成功后的<code>Web.config</code>文件<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d73290bd34b8aa3160d4a0fdbb6738ec.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 效果与预期一致。</p> <h2 id="aspnetcore下的多环境配置">aspnetcore下的多环境配置</h2> <p>aspnetcore中的配置文件被<code>appsettings.json</code>所取代，.NET Core中的配置是使用一个或多个<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/zh-cn/dotnet/core/extensions/configuration#configuration-providers"  target="_blank" rel="nofollow">配置提供程序执行的。 配置提供程序使用各种配置源从键值对读取配置数据：</p> <h3 id="什么是配置提供程序">什么是配置提供程序</h3> <p>下表显示了 .NET Core 应用可用的配置提供程序。</p> <table> <thead> <tr> <th>提供程序</th> <th>通过以下对象提供配置</th> </tr> </thead> <tbody> <tr> <td>Azure 应用配置提供程序</td> <td>Azure 应用程序配置</td> </tr> <tr> <td>Azure Key Vault 配置提供程序</td> <td>Azure Key Vault</td> </tr> <tr> <td>命令行配置提供程序</td> <td>命令行参数</td> </tr> <tr> <td>自定义配置提供程序</td> <td>自定义源</td> </tr> <tr> <td>环境变量配置提供程序</td> <td>环境变量</td> </tr> <tr> <td>文件配置提供程序</td> <td>JSON、XML 和 INI 文件</td> </tr> <tr> <td>Key-per-file 配置提供程序</td> <td>目录文件</td> </tr> <tr> <td>内存配置提供程序</td> <td>内存中集合</td> </tr> <tr> <td>应用机密（机密管理器）</td> <td>用户配置文件目录中的文件</td> </tr> </tbody> </table> <p>详细内容参考.NET 中的配置<br />https://docs.microsoft.com/zh-cn/dotnet/core/extensions/configuration<br /> 其中以下部分比较值得注意<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f484600c5a7167a59e01d731c5d5e466.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 划重点：<code>后来添加的配置提供程序会替代之前的密钥设置</code><br /><code>appsettings.Development.json</code>比<code>appsettings.json</code>后加载，则后加载的会覆盖先加载配置的值，没毛病!</p> <h3 id="多环境配置文件时如何加载">多环境配置文件时如何加载</h3> <p>为了彻底弄清楚底层加载逻辑，下载源码一探究竟。</p> <pre><code class="language-c#">builder.ConfigureAppConfiguration((hostingContext, config) =>         {             var env = hostingContext.HostingEnvironment;              config.AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)                   .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true, reloadOnChange: true);              if (env.IsDevelopment())             {                 if (!string.IsNullOrEmpty(env.ApplicationName))                 {                     var appAssembly = Assembly.Load(new AssemblyName(env.ApplicationName));                     if (appAssembly != null)                     {                         config.AddUserSecrets(appAssembly, optional: true);                     }                 }             }              config.AddEnvironmentVariables();              if (args != null)             {                 config.AddCommandLine(args);             }         })</code></pre> <p>默认的<code>WebHostBuilder</code>实现中,用环境变量<code>env.EnvironmentName</code>值拼接的json文件进行加载。这也是为什么开发阶段会加载<code>appsettings.Development.json</code>配置文件的原理。</p> <h3 id="开发阶段的多环境">开发阶段的多环境</h3> <p>如何传参修改环境变量<code>EnvironmentName</code>值是问题的关键，若能修改想要的值，然后创建对应名称的配置文件即可。<br /> 在web根目录存在一个文件：<code>Properties/launchSettings.json</code><br /> 其中有一个配置环境变量的配置</p> <pre><code class="language-json">"environmentVariables": {     "ASPNETCORE_ENVIRONMENT": "Development" },</code></pre> <p>本地开发时只需要创建多个启动配置，分别设置不同的<code>ASPNETCORE_ENVIRONMENT</code>即可进行切换了，修改后的<code>launchSettings.json</code></p> <pre><code class="language-json">// launchSettings.json {   "iisSettings": {     "windowsAuthentication": false,     "anonymousAuthentication": true,     "iisExpress": {       "applicationUrl": "http://localhost:2364",       "sslPort": 44302     }   },   "profiles": {     "Web1": {       "commandName": "Project",       "launchBrowser": true,       "environmentVariables": {         "ASPNETCORE_ENVIRONMENT": "Development"       },       "applicationUrl": "https://localhost:7006;http://localhost:5006",       "dotnetRunMessages": true     },     "Web1:Test": {       "commandName": "Project",       "launchBrowser": true,       "environmentVariables": {         "ASPNETCORE_ENVIRONMENT": "TEST"       },       "applicationUrl": "https://localhost:7006;http://localhost:5006",       "dotnetRunMessages": true     }   } }</code></pre> <p><code>Web1</code>和<code>Web1:Test</code>启动选项便会同步显示在VS启动选项中，切换为<code>Web1:Test</code>再运行程序，就会加载<code>appsettings.TEST.json</code>，效果和<code>appsettings.Development.json</code>没区别。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b939f65140188955938adf36ffecefaf.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"></p> <h3 id="发布阶段的实现多环境配置">发布阶段的实现多环境配置</h3> <p>在上文中我们学会了在本地配置多个不同环境配置进行开发，那如果需要发布的生产环境也有很多种配置，那如何让程序自动加载不同的配置文件呢，毕竟<code>launchSettings.json</code>文件只是在开发时搭配VS用的，既然<code>launchSettings.json</code>可以配置环境变量，没了它我们手动创建环境变量应该也可以。在操作系统添加环境变量如：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4ec921c50d564c839494ffefcdd1f5b0.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 也可以在程序启动时通过命令行传参设置环境值。<br /> 但是这两种我都感觉不方便，我们希望程序根据不同的环境发布好以后，只需要直接执行就好，而不是需要进行额外的配置或传参。</p> <h3 id="environmentname-属性">EnvironmentName 属性</h3> <p>在项目的工程文件中有<code>EnvironmentName</code>属性，可以指定当前<code>EnvironmentName</code>值，添加如下代码<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/943829a8030fc69fd3af88e4c4fe9ca7.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 然后编译后的，直接运行，就能够读取到<code>appsettings.TEST.json</code>配置文件。<br /> 这配置不会覆盖<code>launchSettings.json</code>中指定的环境值，但在影响发布后的<code>EnvironmentName</code>值，从而可以改变实现发布后默认的<code>EnvironmentName</code>值。<br /> 那这样设置后，岂不是发布后的<code>EnvironmentName</code>值只能是<code>Test</code>，如果要发布其他环境还要每次发布前修改这个值，那不是很麻烦吗？<br /> 没错如果没有点其他手段，那这真是多此一举啊，请看下图。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cec1be7a8be98fad83b7416a3690f7b4.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 懂了吧，我们只需要多配置一个<code>PublishProfile</code>发布文件，指定不同的<code>配置</code>项，然后结合<code>Condition</code>条件来控制<code>EnvironmentName</code>。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/80ee14d34611fb4bc8d7af43a1988738.jpg" alt="ASP.NET和ASP.NETCore多环境配置对比"><br /> 至此，完美实现根据不同环境选择不同的发布文件，进行发布项目，目标机器不需要做任何配置，直接运行就是我们想要的效果。<br /> 总结虽然ASP.NET和ASP.NETCore实现多环境的方式不同，但是最后发布时我们可以做到一样的效果，所有的配置都是一次性的，发布时指定对应的<code>PublishProfile</code>即可。</p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1606.htm">RabbitMQ链接不上异常</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1608.htm">linux下安装tomcat9,linux tomcat 9 安装及配置教程</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7544.htm" title="宠物医院参观体会（参观宠物医院实验报告）">宠物医院参观体会（参观宠物医院实验报告）</a></li>
                        <li class="py-2"><a href="/html/category/article-7636.htm" title="长沙哪里可以领养宠物猫（长沙哪里可以领养宠物猫的）">长沙哪里可以领养宠物猫（长沙哪里可以领养宠物猫的）</a></li>
                        <li class="py-2"><a href="/html/category/article-8096.htm" title="动物免疫接种的意义（动物免疫接种的注意事项有哪些?）">动物免疫接种的意义（动物免疫接种的注意事项有哪些?）</a></li>
                        <li class="py-2"><a href="/html/category/article-7407.htm" title="全国宠物领养 全国宠物领养中心官网">全国宠物领养 全国宠物领养中心官网</a></li>
                        <li class="py-2"><a href="/html/category/article-8235.htm" title="宠物粮批发网站大全免费（宠物粮网店）">宠物粮批发网站大全免费（宠物粮网店）</a></li>
                        <li class="py-2"><a href="/html/category/article-7269.htm" title="猫咪抓破了不***有没有事（猫咪抓伤没***会不会有事）">猫咪抓破了不***有没有事（猫咪抓伤没***会不会有事）</a></li>
                        <li class="py-2"><a href="/html/category/article-7038.htm" title="狗粮厂家批发中心电话（狗粮厂家批发中心电话多少）">狗粮厂家批发中心电话（狗粮厂家批发中心电话多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-7637.htm" title="动物医院社会实践报告范文 动物医院社会实践报告范文怎么写">动物医院社会实践报告范文 动物医院社会实践报告范文怎么写</a></li>
                        <li class="py-2"><a href="/html/category/article-7176.htm" title="电视剧终极证据（终极证据第二部第二季）">电视剧终极证据（终极证据第二部第二季）</a></li>
                        <li class="py-2"><a href="/html/category/article-7453.htm" title="动物医院名字有哪些好听点（动物医院牌匾）">动物医院名字有哪些好听点（动物医院牌匾）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>