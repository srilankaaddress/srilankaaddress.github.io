<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1423.htm" />
    <title>RabbitMQ Exchange Queue RoutingKey BindingKey解析 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/website/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/website/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/website/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">RabbitMQ Exchange Queue RoutingKey BindingKey解析</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<div id="content_views" class="htmledit_views"> <p>许多新手在刚接触RabbitMQ的时候，会被各种名词弄晕，包括ConnectionFactory 、Connection 、Channel、Exchange、Queue、RoutingKey、BindingKey等等，现在我言简意赅的描绘一下这些名词到底是啥概念</p> <p>首先我们肯定知道RabbitMQ就是消息队列的一种实现，那么围绕这个，我们就可以思考一个消息队列到底需要什么，当然是需要队列，那么这个队列就是Queue，那么其他的所有名词都是围绕这个Queue来拓展的。</p> <p>首先，想要让队列不在本地运行，而在网络中运行，肯定会有连接这个概念，所以就会有Connection，我们发一条消息连接一次，这样很显然是浪费资源的，建立连接的过程也很耗时，所以我们就会做一个东西让他来管理连接，当我用的时候，直接从里边拿出来已经建立好的连接发信息，那么ConnectionFactory应运而生。</p> <p>接下来，当程序开发时，可能不止用到一个队列，可能有订单的队列、消息的队列、任务的队列等等，那么就需要给不同的queue发信息，那么和每一个队列连接的这个概念，就叫Channel</p> <p>再往下来，当我们开发的时候还有时候会用到这样一种功能，就是当我发送一条消息，需要让几个queue都收到，那么怎么解决这个问题呢，难道我要给每一个queue发送一次消息？那岂不是浪费带宽又浪费资源，我们能想到什么办法呢，当然是我们发送给RabbitMQ服务器一次，然后让RabbitMQ服务器自己解析需要给哪个Queue发，那么Exchange就是干这件事的</p> <p>但是我们给Exchange发消息，他怎么知道给哪个Queue发呢？这里就用到了RoutingKey和BindingKey</p> <p>BindingKey是Exchange和Queue绑定的规则描述，这个描述用来解析当Exchange接收到消息时，Exchange接收到的消息会带有RoutingKey这个字段，Exchange就是根据这个RoutingKey和当前Exchange所有绑定的BindingKey做匹配，如果满足要求，就往BindingKey所绑定的Queue发送消息，这样我们就解决了我们向RabbitMQ发送一次消息，可以分发到不同的Queue的过程</p> <p>至此，我们就把所有的名词贯通咯，接下来做个概要描述：</p> <p>ConnectionFactory：与RabbitMQ服务器连接的管理器</p> <p>Connection：与RabbitMQ服务器的连接</p> <p>Channel：与Exchange的连接</p> <p>Exchange：接受消息提供者（生产者）的消息，并根据消息的RoutingKey和Exchange绑定的BindingKey分配消息</p> <p>Queue：存储消息接收者（消费者）的消息</p> <p>RoutingKey：指定当前消息被谁接受</p> <p>BindingKey：指定当前Exchange下，什么样的RoutingKey会被下派到当前绑定的Queue中</p> <p>如下图（本人画画功底薄，别见怪~）</p> <p>其中我们看到BindingKey1有两个，这样不会冲突，因为消息具体发送到哪里是通过Exchange和RoutingKey来决定的</p> <p>也就是说我指定Channel1-->Exchange1-->BindingKey1就会被发送到Queue1中</p> <p>当我指定Channel-2-->Exchange2-->bindingKey1则会发送到Queue2和Queue3中</p> <p><span style="color:#f33b45;">温馨提示：当前的RoutingKey和BindingKey均为参数名称，不是参数真实值，那么真实情况下是下方这样的：</span></p> <p><span style="color:#f33b45;">创建ConnectionFactory，通过ConnectionFactory创建Connection，通过Connection创建Channel</span></p> <p><span style="color:#f33b45;">通过channel，声明一个Exchange名字为“Exchange2”，声明一个Queue名字为“Queue2”，声明一个Queue名字为“Queue3”</span></p> <p><span style="color:#f33b45;">声明完了，我们就需要让他们绑定了，让“Exchange2”绑定到“Queue2”上，设置绑定的RoutingKey（真实情况下参数名都是RoutingKey，没有BindingKey这个参数，为了区别用户发送的和我们绑定的概念，我们才说RoutingKey和BindingKey）为“key1”，在让“Exchange2”绑定到“Queue2”上，设置绑定的RoutingKey为“key1”，然后通过Channel发送消息，发送消息的三个参数Exchange名称、RoutingKey，和消息，Exchange名称就是“Exchange2”，RoutingKey就是“key1”，那么这样这条消息就会被成功发送到“Queue2”和“Queue3”中了，OK大功告成！</span></p> <p><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220904/9215ad20a8144356132c83eb147ce5f1.jpg"><br /> Exchange 和 quene是一对多的</p> <p>--------------------------------------------------------------------------------------------------------------------------------------------------</p> <h1>RabbitMQ与AMQP协议详解</h1> <p><strong>1. 消息队列的历史</strong><br /> 了解一件事情的来龙去脉，将不会对它感到神秘。让我们来看看消息队列（Message Queue）这项技术的发展历史。</p> <p>Message Queue的需求由来已久，80年代最早在金融交易中，高盛等公司采用Teknekron公司的产品，当时的Message queuing软件叫做：the information bus（TIB）。 TIB被电信和通讯公司采用，路透社收购了Teknekron公司。之后，IBM开发了MQSeries，微软开发了Microsoft Message Queue（MSMQ）。这些商业MQ供应商的问题是厂商锁定，价格高昂。2001年，Java Message queuing试图解决锁定和交互性的问题，但对应用来说反而更加麻烦了。</p> <p>于是2004年，摩根大通和iMatrix开始着手Advanced Message Queuing Protocol （AMQP）开放标准的开发。2006年，AMQP规范发布。2007年，Rabbit技术公司基于AMQP标准开发的RabbitMQ 1.0 发布。</p> <p>目前RabbitMQ的最新版本为3.5.7，基于AMQP 0-9-1。<br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/45bdedd9fc822d0b067fa793a33c0ffe.jpg"><br /> RabbitMQ采用Erlang语言开发。Erlang语言由Ericson设计，专门为开发concurrent和distribution系统的一种语言，在电信领域使用广泛。OTP（Open Telecom Platform）作为Erlang语言的一部分，包含了很多基于Erlang开发的中间件／库／工具，如mnesia／SASL，极大方便了Erlang应用的开发。OTP就类似于Python语言中众多的module，用户借助这些module可以很方便的开发应用。</p> <p><strong>2. AMQP messaging 中的基本概念</strong><br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/14a3ec304782e6b8d26bca194db0c59f.jpg"></p> <ul> <li><strong>Broker</strong>: 接收和分发消息的应用，RabbitMQ Server就是Message Broker。</li> <li><strong>Virtual host</strong>: 出于多租户和安全因素设计的，把AMQP的基本组件划分到一个虚拟的分组中，类似于网络中的namespace概念。当多个不同的用户使用同一个RabbitMQ server提供的服务时，可以划分出多个vhost，每个用户在自己的vhost创建exchange／queue等。</li> <li><strong>Connection</strong>: publisher／consumer和broker之间的TCP连接。断开连接的操作只会在client端进行，Broker不会断开连接，除非出现网络故障或broker服务出现问题。</li> <li><strong>Channel</strong>: 如果每一次访问RabbitMQ都建立一个Connection，在消息量大的时候建立TCP Connection的开销将是巨大的，效率也较低。Channel是在connection内部建立的逻辑连接，如果应用程序支持多线程，通常每个thread创建单独的channel进行通讯，AMQP method包含了channel id帮助客户端和message broker识别channel，所以channel之间是完全隔离的。Channel作为轻量级的Connection极大减少了操作系统建立TCP connection的开销。</li> <li><strong>Exchange</strong>: message到达broker的第一站，根据分发规则，匹配查询表中的routing key，分发消息到queue中去。常用的类型有：direct (point-to-point), topic (publish-subscribe) and fanout (multicast)。</li> <li><strong>Queue</strong>: 消息最终被送到这里等待consumer取走。一个message可以被同时拷贝到多个queue中。</li> <li><strong>Binding</strong>: exchange和queue之间的虚拟连接，binding中可以包含routing key。Binding信息被保存到exchange中的查询表中，用于message的分发依据。</li> </ul> <p><strong>3. 典型的“生产／消费”消息模型</strong><br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/8fea2431e3971faafeb514cde927e58c.jpg"><br /> 生产者发送消息到broker server（RabbitMQ）。在Broker内部，用户创建Exchange／Queue，通过Binding规则将两者联系在一起。Exchange分发消息，根据类型／binding的不同分发策略有区别。消息最后来到Queue中，等待消费者取走。</p> <p><strong>4. Exchange类型</strong><br /> Exchange有多种类型，最常用的是Direct／Fanout／Topic三种类型。</p> <p>Direct<br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/aff4e5c448ebbb62773a84096fff9fd5.jpg"><br /> Message中的“routing key”如果和Binding中的“binding key”一致， Direct exchange则将message发到对应的queue中。</p> <p>Fanout<br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/19a9ae35b2a268d2bd9a05f2034b5a40.jpg"><br /> 每个发到Fanout类型Exchange的message都会分到所有绑定的queue上去。</p> <p>Topic<br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/88323bbe419d6f59aa3d20f24f21dc1c.jpg"><br /> 根据routing key，及通配规则，Topic exchange将分发到目标queue中。</p> <p>Routing key中可以包含两种通配符，类似于正则表达式：</p> <pre class="has"><code>“#”通配任何零个或多个word “*”通配任何单个word</code></pre> <p>这里也推荐给想要了解RabbitMQ的同学一个网站，http://tryrabbitmq.com&nbsp;，它提供在线RabbitMQ 模拟器，可以帮助理解Exchange／queue／binding概念。<br /><img decoding="async" alt="图片描述" class="has" src="http://img.555519.xyz/uploads3/20220904/21ba55915fb476b9ad0d652ea4975c0c.jpg"></p> <p>至此，我们对于消息队列的发展，RabbitMQ的产生，以及AMQP协议中的重要概念做了一个完整的介绍。</p> </div> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1422.htm">19-Spring AOP源码分析-代理对象调用目标方法</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1424.htm">通过+（字符串串联）运算符进行字符串串联。</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-10534.htm" title="新疆宠物领养中心 新疆宠物领养中心在哪里">新疆宠物领养中心 新疆宠物领养中心在哪里</a></li>
                        <li class="py-2"><a href="/html/category/article-9568.htm" title="动物诊疗机构管理制度文本打印（2021动物诊疗机构管理办法）">动物诊疗机构管理制度文本打印（2021动物诊疗机构管理办法）</a></li>
                        <li class="py-2"><a href="/html/category/article-10719.htm" title="宠物买卖软件（宠物买卖软件有哪些）">宠物买卖软件（宠物买卖软件有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-10442.htm" title="代练妈妈（代练妈妈和代练通哪个好?）">代练妈妈（代练妈妈和代练通哪个好?）</a></li>
                        <li class="py-2"><a href="/html/category/article-10351.htm" title="动物防疫方针政策解读（动物防疫实施办法）">动物防疫方针政策解读（动物防疫实施办法）</a></li>
                        <li class="py-2"><a href="/html/category/article-10258.htm" title="动物医疗设备在哪买 动物医疗设备在哪买比较好">动物医疗设备在哪买 动物医疗设备在哪买比较好</a></li>
                        <li class="py-2"><a href="/html/category/article-10903.htm" title="北京给宠物打疫苗多少钱（北京宠物打疫苗去哪里）">北京给宠物打疫苗多少钱（北京宠物打疫苗去哪里）</a></li>
                        <li class="py-2"><a href="/html/category/article-9890.htm" title="动物疫苗的作用有哪些种类（动物疫苗的作用有哪些种类的）">动物疫苗的作用有哪些种类（动物疫苗的作用有哪些种类的）</a></li>
                        <li class="py-2"><a href="/html/category/article-9845.htm" title="包心米丸子的做法和配方(包心丸子的做法视频)">包心米丸子的做法和配方(包心丸子的做法视频)</a></li>
                        <li class="py-2"><a href="/html/category/article-9661.htm" title="包含动物打防疫针视频大全的词条">包含动物打防疫针视频大全的词条</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/website/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/website/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/website/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/website/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/website/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>