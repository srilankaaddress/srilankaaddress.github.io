<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://srilankaaddress.github.io/html/category/article-1453.htm" />
    <title>使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题 - Sri Lanka Address</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/srilankaaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e8fff5fa52c11c99c5cdad6284174bdb";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.css">
    <link href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/srilankaaddress/about_responsive.css">
</head>

<body>
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Sri Lanka<span> Address</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/html/category/">文章分类</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                  				  				  				<h1 id="理想的代码优化方式">理想的代码优化方式</h1> <p>团队日常协作中，自然而然的会出现很多重复代码，根据这些代码的种类，之前可能会以以下方式处理</p> <table> <thead> <tr> <th style="text-align: left">方式</th> <th style="text-align: left">描述</th> <th style="text-align: left">应用时可能产生的问题</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">硬编码</td> <td style="text-align: left">多数新手，或逐渐腐坏的项目会这么干，会直接复制之前实现的代码</td> <td style="text-align: left">带来的问题显而易见的多，例如架构会逐渐随时间被侵蚀，例外越来越多</td> </tr> <tr> <td style="text-align: left">提取函数</td> <td style="text-align: left">提取成为函数，然后复用</td> <td style="text-align: left">提取函数，然后复用，会比直接硬编码好些，但是仍然存在大量因“例外”而导致增加参数、增加函数重载的情况</td> </tr> <tr> <td style="text-align: left">模板生成器</td> <td style="text-align: left">CodeSmith/T4等</td> <td style="text-align: left">因为是独立进程，所以对于读取用户代码或项目，实现难度较高，且需要现有用户项目先生成成功，再进行生成 ，或者是完全基于新项目</td> </tr> <tr> <td style="text-align: left">代码片段</td> <td style="text-align: left">VS自带的代码片段功能</td> <td style="text-align: left">无法对复杂的环境或条件做出响应</td> </tr> <tr> <td style="text-align: left">AOP框架</td> <td style="text-align: left">面向切面编程，可以解决很多于用户代码前后增加操作的事情</td> <td style="text-align: left">但是大多AOP框架都是基于透明代理形式实现的，对于相互调用较多的代码，但形成性能压力，而且因为要符合透明代理的规则，所以要提供相应的子类或接口。</td> </tr> </tbody> </table> <h1 id="基于rosyln的编译时插入代码">基于Rosyln的编译时插入代码</h1> <p>但以上这几种，AOP算是最理想的方式，但是感觉上还可以有更好的解决方案。</p> <p>直到读到了这篇文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">Introducing C# Source Generators</a>，文中提供了一种新的解决方案，即通过<code>Roslyn</code>的<code>Source Generator</code>在编译时直接读取当前项目中的语法树，处理并生成的新代码，然后在编译时也使用这些新代码。</p> <p>那么如果可以读取现有代码的语法树，通过读取代码中的标记，那么在代码生成过程中是否就能直接生成。<br /> 实现如下效果：<br /><strong>项目中的源代码<code>Program.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         return a + b;     } }</code></pre> <p><strong>自动根据<code>LogAttribute</code> 自动编译成的代码<code>Program.g.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         Console.WriteLine("Program.Add(int, int) 开始运行.");         int result;         result = a + b;         Console.WriteLine("Program.Add(int, int) 结束运行.");         return result;     } }</code></pre> <p>当然<code>LogAttribute</code>中需要去实现插入代码。<br /> 然后项目自动使用新生成的<code>Program.g.cs</code>进行编译。这样就实现了基于编译时的AOP。</p> <p>即实现以下流程<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b60d3f4115a4368be8e27fe0c26fc6cd.jpg" alt="使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题"></p> <h1 id="使用metalama实现以上流程">使用Metalama实现以上流程</h1> <p>经过寻找，发现其实已经有框架可以实现我上面说的流程了，也就是在编译时实现代码的插入。<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a> 。</p> <p>下面作一个简单示例</p> <ol> <li>创建一个.NET6.0的控制台应用，我这里命名为<code>LogDemo</code>,<br /> 其中的入口文件<code>Program.cs</code></li> </ol> <pre><code class="language-C#">namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 这里写一个简单的方法，一会对这个方法进行代码的插入         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     } }</code></pre> <ol start="2"> <li>在项目中使用<strong>Metalama</strong></li> </ol> <p>通过引用包<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/packages/Metalama.Framework"  target="_blank" rel="nofollow">https://www.nuget.org/packages/Metalama.Framework</a>, 注意Metalama当前是Preview版本，如果通过可视化Nuget管理器引入，需要注意勾选<strong>包含预发行版</strong></p> <pre><code class="language-ps">dotnet add package Metalama.Framework --version 0.5.7-preview</code></pre> <ol start="3"> <li>编写一个AOP的Attribute</li> </ol> <p>在项目中引入<code>Metalama.Framework</code>后无需多余配置或代码，直接编写一个AOP的<code>Attribute</code></p> <pre><code class="language-C#">using Metalama.Framework.Aspects;  namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     }     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod()         {             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 开始运行.");             var result = meta.Proceed();             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 结束运行.");             return result;          }     } }</code></pre> <ol start="4"> <li>执行结果如下</li> </ol> <pre><code>Program.Add(int, int) 开始运行. Add3 Program.Add(int, int) 结束运行. 3</code></pre> <ol start="5"> <li>生成的程序集进行反编译，得到的代码如下：</li> </ol> <pre><code class="language-C#">using Metalama.Framework.Aspects; namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             Console.WriteLine("Program.Add(int, int) 开始运行.");             int result_1;             var result = a + b;             Console.WriteLine("Add" + result);             result_1 = result;             Console.WriteLine("Program.Add(int, int) 结束运行.");             return result_1;         }     } #pragma warning disable CS0067     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod() =&gt;          throw new System.NotSupportedException("Compile-time-only code cannot be called at run-time.");     } #pragma warning restore CS0067 }</code></pre> <h1 id="总结">总结</h1> <p>这样就完全实现了我之前想要的效果，当然使用<code>Metalama</code>还可以实现很多能极大地提高生产力的功能，它不仅可以对方法进行改写，也可以对属性、字段、事件、甚至是类、命名空间进行一些操作 。</p> <h1 id="引用">引用</h1> <p>Introducing C# Source Generators：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/</a><br /> Metalama官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a></p> 			
                                <div class="col-md-12 mt-5">
                                                                        <p>上一个：<a href="/html/category/article-1452.htm">pgpool-II 4.3中文手册入门教程</a></p>
                                                                        <p>下一个：<a href="/html/category/article-1454.htm">手写useState与useEffect_在线工具</a></p>
                                                                    </div>

                                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1921.htm" title="IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退">IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退</a></li>
                        <li class="py-2"><a href="/html/category/article-1620.htm" title="Spring如何快速上手">Spring如何快速上手</a></li>
                        <li class="py-2"><a href="/html/category/article-1579.htm" title="Vue3项目中动态组件component的使用">Vue3项目中动态组件component的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-1618.htm" title="vue3中获取ref元素的几种方式">vue3中获取ref元素的几种方式</a></li>
                        <li class="py-2"><a href="/html/category/article-1596.htm" title="clickhouse智能提示编辑器">clickhouse智能提示编辑器</a></li>
                        <li class="py-2"><a href="/html/category/article-1585.htm" title="pymysql增删改查之insert操作">pymysql增删改查之insert操作</a></li>
                        <li class="py-2"><a href="/html/category/article-1590.htm" title="Python  turtle  模块可以编写游戏，是真的吗？">Python  turtle  模块可以编写游戏，是真的吗？</a></li>
                        <li class="py-2"><a href="/html/category/article-1612.htm" title="C语言 模拟实现memcpy与memmove函数详解_C 语言">C语言 模拟实现memcpy与memmove函数详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1624.htm" title="Java 18为什么要指定UTF-8为默认字符集_在线工具">Java 18为什么要指定UTF-8为默认字符集_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-1592.htm" title="SpringBoot时区问题解决，彻底解决时差问题">SpringBoot时区问题解决，彻底解决时差问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">42</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/assets/addons/xcblog/img/srilankaaddress/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                Sri Lanka Address 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/jquery-3.2.1.min.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/popper.js"></script>
    <script src="/assets/addons/xcblog/css/srilankaaddress/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/owl.carousel.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/easing/easing.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/srilankaaddress/about.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>